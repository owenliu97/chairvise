{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\PieChartSectionDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\PieChartSectionDetail.vue","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue';\nimport PieChart from '@/components/sectionDetail/chart/PieChart.vue';\nimport { generateBorderColor, generateBackgroundColor } from '@/common/color';\nexport default {\n  name: \"PieChartSectionDetail\",\n  props: {\n    sectionDetail: {\n      type: Object,\n      required: true\n    },\n    presentationId: {\n      type: String,\n      required: true\n    },\n    version: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      labels: [],\n      dataset: {},\n      options: {}\n    };\n  },\n  computed: {\n    hasData: function hasData() {\n      return this.labels.length !== 0;\n    },\n    chartData: function chartData() {\n      return {\n        labels: this.labels,\n        datasets: [this.dataset]\n      };\n    }\n  },\n  methods: {\n    updateVisualisation: function updateVisualisation(_ref) {\n      var result = _ref.result,\n          extraData = _ref.extraData;\n      var displayedResult = result.slice(0, extraData.numOfResultToDisplay);\n      var remainedResult = result.slice(extraData.numOfResultToDisplay, result.length); // process category\n\n      this.labels = displayedResult.map(function (record) {\n        return record[extraData.categoryFieldName];\n      });\n\n      if (remainedResult.length !== 0) {\n        this.labels.push(\"Other\");\n      } // process value\n\n\n      var data = displayedResult.map(function (record) {\n        return record[extraData.valueFieldName];\n      });\n\n      if (remainedResult.length !== 0) {\n        // take sum of the rest\n        data.push(remainedResult.map(function (record) {\n          return record[extraData.valueFieldName];\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0));\n      } // generate dataset\n\n\n      this.dataset = {\n        borderWidth: 1,\n        label: extraData.dataSetLabel,\n        data: data,\n        backgroundColor: generateBackgroundColor(data.length),\n        borderColor: generateBorderColor(data.length)\n      }; // process options\n\n      this.options = {\n        legend: {\n          display: true,\n          position: 'bottom'\n        },\n        layout: {\n          padding: {\n            top: 15\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          datalabels: {\n            // show both value and percentage\n            formatter: function formatter(value, ctx) {\n              var sum = 0;\n              var dataArr = ctx.chart.data.datasets[0].data;\n              dataArr.map(function (data) {\n                sum += data;\n              });\n              var percentage = (value * 100 / sum).toFixed(2) + \"%\";\n              return \"\".concat(percentage, \" (\").concat(value, \")\");\n            }\n          }\n        }\n      };\n    }\n  },\n  components: {\n    BasicSectionDetail: BasicSectionDetail,\n    PieChart: PieChart\n  }\n};",{"version":3,"sources":["PieChartSectionDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <basic-section-detail :section-detail=\"sectionDetail\" :presentation-id=\"presentationId\" :has-data=\"hasData\"\n                        :version=\"version\"\n                        :extraFormItemsRules=\"{}\"\n                        @update-visualisation=\"updateVisualisation\">\n    <pie-chart :chart-data=\"chartData\" :options=\"options\"></pie-chart>\n\n    <template slot=\"extraFormItems\" slot-scope=\"slotProps\">\n      <el-form-item label=\"Category Field Name\" prop=\"extraData.categoryFieldName\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-select placeholder=\"categoryFieldName\" v-model=\"slotProps.extraData.categoryFieldName\">\n          <el-option\n            v-for=\"selection in slotProps.editForm.selections\"\n            :key=\"selection.rename\"\n            :label=\"selection.rename\"\n            :value=\"selection.rename\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Value Field Name\" prop=\"extraData.valueFieldName\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-select placeholder=\"valueFieldName\" v-model=\"slotProps.extraData.valueFieldName\">\n          <el-option\n            v-for=\"selection in slotProps.editForm.selections\"\n            :key=\"selection.rename\"\n            :label=\"selection.rename\"\n            :value=\"selection.rename\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Num of result to display\" prop=\"extraData.numOfResultToDisplay\"\n                    v-if=\"slotProps.isInAdvancedMode\">\n        <el-slider v-model=\"slotProps.extraData.numOfResultToDisplay\" :min=\"5\" :max=\"30\"></el-slider>\n      </el-form-item>\n    </template>\n  </basic-section-detail>\n</template>\n\n<script>\n  import BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue'\n  import PieChart from '@/components/sectionDetail/chart/PieChart.vue'\n  import {generateBorderColor, generateBackgroundColor} from '@/common/color'\n\n  export default {\n    name: \"PieChartSectionDetail\",\n\n    props: {\n      sectionDetail: {\n        type: Object,\n        required: true\n      },\n      presentationId: {\n        type: String,\n        required: true\n      },\n      version: {\n        type: String,\n        required: true\n      }\n    },\n\n    data() {\n      return {\n\n        labels: [],\n        dataset: {},\n        options: {},\n      }\n    },\n\n    computed: {\n      hasData() {\n        return this.labels.length !== 0;\n      },\n\n      chartData() {\n        return {\n          labels: this.labels,\n          datasets: [this.dataset]\n        }\n      }\n    },\n\n    methods: {\n      updateVisualisation({result, extraData}) {\n        let displayedResult = result.slice(0, extraData.numOfResultToDisplay);\n        let remainedResult = result.slice(extraData.numOfResultToDisplay, result.length);\n\n        // process category\n        this.labels = displayedResult.map(record => record[extraData.categoryFieldName]);\n        if (remainedResult.length !== 0) {\n          this.labels.push(\"Other\");\n        }\n\n        // process value\n        let data = displayedResult.map(record => record[extraData.valueFieldName]);\n        if (remainedResult.length !== 0) {\n          // take sum of the rest\n          data.push(remainedResult.map(record => record[extraData.valueFieldName]).reduce((a, b) => a + b, 0));\n        }\n\n        // generate dataset\n        this.dataset = {\n          borderWidth: 1,\n          label: extraData.dataSetLabel,\n          data,\n          backgroundColor: generateBackgroundColor(data.length),\n          borderColor: generateBorderColor(data.length),\n        };\n\n        // process options\n        this.options = {\n          legend: {\n            display: true,\n            position: 'bottom'\n          },\n          layout: {\n            padding: {\n              top: 15,\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            datalabels: {\n              // show both value and percentage\n              formatter: (value, ctx) => {\n                let sum = 0;\n                let dataArr = ctx.chart.data.datasets[0].data;\n                dataArr.map(data => {\n                  sum += data;\n                });\n                let percentage = (value * 100 / sum).toFixed(2) + \"%\";\n                return `${percentage} (${value})`;\n              },\n            }\n          }\n        }\n      }\n    },\n\n    components: {\n      BasicSectionDetail,\n      PieChart\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/sectionDetail"}]}