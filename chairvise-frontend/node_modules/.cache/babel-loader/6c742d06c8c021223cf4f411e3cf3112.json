{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\LineChartSectionDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\LineChartSectionDetail.vue","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LineChart from '@/components/sectionDetail/chart/LineChart.vue';\nimport BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue';\nimport { generateBorderColor, generateBackgroundColor } from '@/common/color';\nexport default {\n  name: \"LineChartSectionDetail\",\n  props: {\n    sectionDetail: {\n      type: Object,\n      required: true\n    },\n    presentationId: {\n      type: String,\n      required: true\n    },\n    version: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      labels: [],\n      dataset: {},\n      options: {}\n    };\n  },\n  computed: {\n    hasData: function hasData() {\n      return this.labels.length !== 0;\n    },\n    chartData: function chartData() {\n      return {\n        labels: this.labels,\n        datasets: [this.dataset]\n      };\n    }\n  },\n  methods: {\n    updateVisualisation: function updateVisualisation(_ref) {\n      var result = _ref.result,\n          extraData = _ref.extraData;\n      // process x axis\n      this.labels = result.map(function (record) {\n        return record[extraData.xAxisFieldName];\n      }); // process y axis\n\n      this.dataset = {\n        borderWidth: 1,\n        label: extraData.dataSetLabel,\n        data: result.map(function (record) {\n          return record[extraData.yAxisFieldName];\n        }),\n        backgroundColor: generateBackgroundColor(2)[1],\n        borderColor: generateBorderColor(2)[1]\n      };\n      this.options = {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false\n            },\n            gridLines: {\n              display: true\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              autoSkip: false\n            },\n            gridLines: {\n              display: false\n            }\n          }]\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        },\n        layout: {\n          padding: {\n            top: 30\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          datalabels: {\n            anchor: 'end',\n            align: 'end'\n          }\n        }\n      };\n    }\n  },\n  components: {\n    BasicSectionDetail: BasicSectionDetail,\n    LineChart: LineChart\n  }\n};",{"version":3,"sources":["LineChartSectionDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,SAAA,MAAA,gDAAA;AACA,OAAA,kBAAA,MAAA,mDAAA;AACA,SAAA,mBAAA,EAAA,uBAAA,QAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AATA,GAHA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAxBA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,KAAA,CAAA;AACA,KAHA;AAKA,IAAA,SALA,uBAKA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,KAAA,MADA;AAEA,QAAA,QAAA,EAAA,CAAA,KAAA,OAAA;AAFA,OAAA;AAIA;AAVA,GA1BA;AAuCA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,qCACA;AAAA,UAAA,MAAA,QAAA,MAAA;AAAA,UAAA,SAAA,QAAA,SAAA;AACA;AACA,WAAA,MAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA;AAAA,OAAA,CAAA,CAFA,CAIA;;AACA,WAAA,OAAA,GAAA;AACA,QAAA,WAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,SAAA,CAAA,YAFA;AAGA,QAAA,IAAA,EAAA,MAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,iBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA;AAAA,SAAA,CAHA;AAIA,QAAA,eAAA,EAAA,uBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAJA;AAKA,QAAA,WAAA,EAAA,mBAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AALA,OAAA;AAQA,WAAA,OAAA,GAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA,aADA;AAIA,YAAA,SAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA;AAJA,WAAA,CADA;AASA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,QAAA,EAAA;AADA,aADA;AAIA,YAAA,SAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA;AAJA,WAAA;AATA,SADA;AAmBA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,QAAA,EAAA;AAFA,SAnBA;AAuBA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA;AACA,YAAA,GAAA,EAAA;AADA;AADA,SAvBA;AA4BA,QAAA,UAAA,EAAA,IA5BA;AA6BA,QAAA,mBAAA,EAAA,KA7BA;AA8BA,QAAA,OAAA,EAAA;AACA,UAAA,UAAA,EAAA;AACA,YAAA,MAAA,EAAA,KADA;AAEA,YAAA,KAAA,EAAA;AAFA;AADA;AA9BA,OAAA;AAqCA;AAnDA,GAvCA;AA6FA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA,kBADA;AAEA,IAAA,SAAA,EAAA;AAFA;AA7FA,CAAA","sourcesContent":["<template>\n  <basic-section-detail :section-detail=\"sectionDetail\" :presentation-id=\"presentationId\" :has-data=\"hasData\"\n                        :version=\"version\"\n                        :extraFormItemsRules=\"{}\"\n                        @update-visualisation=\"updateVisualisation\">\n    <line-chart :chart-data=\"chartData\" :options=\"options\"></line-chart>\n\n    <template slot=\"extraFormItems\" slot-scope=\"slotProps\">\n      <el-form-item label=\"xAxis Field Name\" prop=\"extraData.xAxisFieldName\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-select placeholder=\"xAxisFieldName\" v-model=\"slotProps.extraData.xAxisFieldName\">\n          <el-option\n            v-for=\"selection in slotProps.editForm.selections\"\n            :key=\"selection.rename\"\n            :label=\"selection.rename\"\n            :value=\"selection.rename\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"yAxis Field Name\" prop=\"extraData.yAxisFieldName\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-select placeholder=\"yAxisFieldName\" v-model=\"slotProps.extraData.yAxisFieldName\">\n          <el-option\n            v-for=\"selection in slotProps.editForm.selections\"\n            :key=\"selection.rename\"\n            :label=\"selection.rename\"\n            :value=\"selection.rename\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Legend Label Name\" prop=\"extraData.dataSetLabel\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-input v-model=\"slotProps.extraData.dataSetLabel\" placeholder=\"Label Name\"></el-input>\n      </el-form-item>\n    </template>\n  </basic-section-detail>\n</template>\n\n<script>\n  import LineChart from '@/components/sectionDetail/chart/LineChart.vue'\n  import BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue'\n  import {generateBorderColor, generateBackgroundColor} from '@/common/color'\n\n  export default {\n    name: \"LineChartSectionDetail\",\n\n    props: {\n      sectionDetail: {\n        type: Object,\n        required: true\n      },\n      presentationId: {\n        type: String,\n        required: true\n      },\n      version: {\n        type: String,\n        required: true\n      }\n    },\n\n    data() {\n      return {\n        labels: [],\n        dataset: {},\n        options: {},\n      }\n    },\n\n    computed: {\n      hasData() {\n        return this.labels.length !== 0;\n      },\n\n      chartData() {\n        return {\n          labels: this.labels,\n          datasets: [this.dataset]\n        }\n      }\n    },\n\n    methods: {\n      updateVisualisation({result, extraData}) {\n        // process x axis\n        this.labels = result.map(record => record[extraData.xAxisFieldName]);\n\n        // process y axis\n        this.dataset = {\n          borderWidth: 1,\n          label: extraData.dataSetLabel,\n          data: result.map(record => record[extraData.yAxisFieldName]),\n          backgroundColor: generateBackgroundColor(2)[1],\n          borderColor: generateBorderColor(2)[1],\n        };\n\n        this.options = {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: false,\n              },\n              gridLines: {\n                display: true\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              },\n              gridLines: {\n                display: false\n              },\n            }]\n          },\n          legend: {\n            display: true,\n            position: 'bottom'\n          },\n          layout: {\n            padding: {\n              top: 30,\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            datalabels: {\n              anchor: 'end',\n              align: 'end'\n            }\n          }\n        }\n      }\n    },\n\n    components: {\n      BasicSectionDetail,\n      LineChart\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/sectionDetail"}]}