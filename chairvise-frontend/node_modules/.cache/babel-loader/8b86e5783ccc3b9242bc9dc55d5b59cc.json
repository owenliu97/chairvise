{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\PresentationBrief.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\PresentationBrief.vue","mtime":1593267952000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AccessControlPanel from '@/components/AccessControlPanel';\nimport { downloadPDF as _downloadPDF } from \"@/store/helpers/pdfDownloader\";\nimport { downloadPPTX as _downloadPPTX } from \"@/store/helpers/pptxDownloader\";\nimport { AccessLevel, ID_NEW_PRESENTATION, SPECIAL_IDENTIFIER_PUBLIC } from \"@/common/const\";\nimport { deepCopy } from \"@/common/utility\";\nexport default {\n  name: 'PresentationBrief',\n  props: {\n    id: String\n  },\n  mounted: function mounted() {\n    this.updatePresentationForm();\n  },\n  watch: {\n    'id': function id() {\n      this.updatePresentationForm();\n    }\n  },\n  computed: {\n    isLogin: function isLogin() {\n      return this.$store.state.userInfo.isLogin;\n    },\n    isPresentationEditable: function isPresentationEditable() {\n      return this.$store.state.presentation.isPresentationEditable;\n    },\n    presentationForm: function presentationForm() {\n      return {\n        name: this.presentationFormName,\n        creatorIdentifier: this.presentationFormCreatorIdentifier,\n        description: this.presentationFormDescription\n      };\n    },\n    presentationFormName: {\n      get: function get() {\n        return this.$store.state.presentation.presentationForm.name;\n      },\n      set: function set(value) {\n        this.$store.commit('setPresentationFormField', {\n          field: 'name',\n          value: value\n        });\n      }\n    },\n    presentationFormCreatorIdentifier: function presentationFormCreatorIdentifier() {\n      return this.$store.state.presentation.presentationForm.creatorIdentifier;\n    },\n    presentationFormDescription: {\n      get: function get() {\n        return this.$store.state.presentation.presentationForm.description;\n      },\n      set: function set(value) {\n        this.$store.commit('setPresentationFormField', {\n          field: 'description',\n          value: value\n        });\n      }\n    },\n    isNewPresentation: function isNewPresentation() {\n      return this.id === ID_NEW_PRESENTATION;\n    },\n    isInEditMode: function isInEditMode() {\n      return this.isEditing || this.isNewPresentation;\n    },\n    isLoading: function isLoading() {\n      return this.$store.state.presentation.presentationFormStatus.isLoading;\n    },\n    isError: function isError() {\n      return this.$store.state.presentation.presentationFormStatus.isApiError;\n    },\n    apiErrorMsg: function apiErrorMsg() {\n      return this.$store.state.presentation.presentationFormStatus.apiErrorMsg;\n    }\n  },\n  data: function data() {\n    return {\n      isEditing: false,\n      isAccessControlDialogVisible: false,\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please enter presentation name',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: 'The length should be more than 3 character',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    changeEditMode: function changeEditMode(isEditing) {\n      if (isEditing === false) {\n        this.updatePresentationForm();\n      }\n\n      this.isEditing = isEditing;\n    },\n    openAccessControlPanel: function openAccessControlPanel() {\n      this.isAccessControlDialogVisible = true;\n    },\n    addPresentation: function addPresentation() {\n      var _this = this;\n\n      this.$refs['presentationForm'].validate(function (valid, object) {\n        if (!valid) {\n          if ('name' in object) {\n            _this.$notify.error({\n              title: 'Error',\n              message: object.name[0].message\n            });\n          }\n\n          return;\n        }\n\n        _this.$refs['presentationForm'].clearValidate();\n\n        if (_this.isNewPresentation) {\n          // add\n          _this.$store.dispatch('savePresentation').then(function () {\n            if (_this.isError) {\n              return;\n            } // redirect to the newly added presentation\n\n\n            _this.$router.push({\n              name: 'analyze',\n              params: {\n                id: _this.$store.state.presentation.presentationForm.id\n              }\n            });\n          });\n        } else {\n          // edit\n          _this.$store.dispatch('updatePresentation').then(function () {\n            if (_this.isError) {\n              return;\n            }\n\n            _this.isEditing = false;\n          });\n        }\n      });\n    },\n    deletePresentation: function deletePresentation() {\n      var _this2 = this;\n\n      this.$store.dispatch('deletePresentation', this.id).then(function () {\n        if (_this2.isError) {\n          return;\n        }\n\n        _this2.$router.replace({\n          name: 'analyze',\n          params: {\n            id: ID_NEW_PRESENTATION\n          }\n        });\n\n        _this2.isEditing = false;\n      });\n    },\n    updatePresentationForm: function updatePresentationForm() {\n      var _this3 = this;\n\n      if (this.$refs['presentationForm']) {\n        this.$refs['presentationForm'].clearValidate();\n      }\n\n      this.$store.commit('resetPresentationForm');\n\n      if (this.id !== ID_NEW_PRESENTATION) {\n        this.$store.dispatch('getPresentation', this.id).then(function () {\n          // check writable or not\n          _this3.$store.dispatch('fetchAccessControlList', _this3.id).then(function () {\n            var currentUser = _this3.$store.state.userInfo.userEmail;\n            var accessControlList = _this3.$store.state.accessControl.accessControlList;\n            var isPresentationEditable = currentUser === _this3.presentationFormCreatorIdentifier || accessControlList.some(function (acl) {\n              return acl.userIdentifier === currentUser && acl.accessLevel === AccessLevel.CAN_WRITE;\n            }) || accessControlList.some(function (acl) {\n              return acl.userIdentifier === SPECIAL_IDENTIFIER_PUBLIC && acl.accessLevel === AccessLevel.CAN_WRITE;\n            });\n\n            _this3.$store.commit('setIsPresentationEditable', isPresentationEditable);\n          });\n        });\n      }\n    },\n    downloadPDF: function downloadPDF() {\n      window.scrollTo(0, 0);\n      var vm = this;\n      var wasPresentationEditable = deepCopy(vm.isPresentationEditable);\n      vm.$store.commit('setIsPresentationEditable', false);\n      vm.$store.commit('setPageLoadingStatus', true);\n      this.$nextTick(function () {\n        _downloadPDF(vm.presentationFormName).then(function () {\n          vm.$store.commit('setIsPresentationEditable', wasPresentationEditable);\n          vm.$store.commit('setPageLoadingStatus', false);\n        });\n      });\n    },\n    downloadPPTX: function downloadPPTX() {\n      window.scrollTo(0, 0);\n      var vm = this;\n      var wasPresentationEditable = deepCopy(vm.isPresentationEditable);\n      vm.$store.commit('setIsPresentationEditable', false);\n      vm.$store.commit('setPageLoadingStatus', true);\n      this.$nextTick(function () {\n        _downloadPPTX(vm.presentationFormName).then(function () {\n          vm.$store.commit('setIsPresentationEditable', wasPresentationEditable);\n          vm.$store.commit('setPageLoadingStatus', false);\n        });\n      });\n    }\n  },\n  components: {\n    AccessControlPanel: AccessControlPanel\n  }\n};",{"version":3,"sources":["PresentationBrief.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card class=\"details-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span> Presentation Details </span>\n      </div>\n      <el-row>\n        <el-col :span=\"18\">\n          <el-form label-position=\"left\" ref=\"presentationForm\" \n                  label-width=\"150px\" :rules=\"rules\"\n                  :model=\"presentationForm\" v-loading=\"isLoading\" >\n            <el-alert v-if=\"isError\" :title=\"apiErrorMsg\" type=\"error\" show-icon class=\"errorMsg\"/>\n\n            <el-form-item label=\"Name: \" v-show=\"isInEditMode\" :prop=\" 'name' \" >\n              <div v-if=\"!isInEditMode\">{{ presentationForm.name }}</div>\n              <el-input v-model=\"presentationFormName\" v-if=\"isInEditMode\"/>\n            </el-form-item>\n            <el-form-item label=\"Name: \" v-show=\"!isInEditMode\" >\n              <div v-if=\"!isInEditMode\">{{ presentationForm.name }}</div>\n              <el-input v-model=\"presentationFormName\" v-if=\"isInEditMode\"/>\n            </el-form-item>\n            <el-form-item label=\"Access Control: \" v-if=\"!isNewPresentation\">\n              <el-tag>Created by {{ presentationForm.creatorIdentifier }}</el-tag>\n            </el-form-item>\n            <el-form-item label=\"Description: \">\n              <div v-if=\"!isInEditMode\" id=\"presentation-description\">{{ presentationForm.description }}</div>\n              <el-input type=\"textarea\" autosize v-model=\"presentationFormDescription\" v-if=\"isInEditMode\"/>\n            </el-form-item>\n            <el-form-item v-if=\"isInEditMode\">\n              <el-button-group>\n                <el-button type=\"primary\" icon=\"el-icon-check\" @click=\"addPresentation()\" v-if=\"isInEditMode\">Save</el-button>\n                <el-button type=\"info\" icon=\"el-icon-close\" @click=\"changeEditMode(false)\" v-if=\"isInEditMode && !isNewPresentation\">Cancel</el-button>\n              </el-button-group>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n      <el-divider v-if=\"!isInEditMode\"></el-divider>\n      <el-row v-if=\"!isInEditMode\">\n        <el-col class=\"download-section\" :span=\"12\">\n          <el-button-group>\n            <el-button type=\"primary\" @click=\"downloadPDF()\" v-if=\"!isInEditMode && !isNewPresentation\"\n              icon=\"el-icon-document\">\n                PDF\n            </el-button>\n            <el-button type=\"danger\" @click=\"downloadPPTX()\" v-if=\"!isInEditMode && !isNewPresentation\"\n              icon=\"el-icon-data-board\">\n                Powerpoint\n            </el-button>\n          </el-button-group>\n        </el-col>\n        <el-col class=\"options-section\" :span=\"12\">\n          <el-divider direction=\"vertical\" class=\"v-divide\"></el-divider>\n          <el-button-group>\n            <el-button type=\"success\" class=\"share_button_left_margin\" icon=\"el-icon-share\"\n                    @click=\"openAccessControlPanel()\" v-if=\"isLogin && isPresentationEditable\">\n              Share\n            </el-button>\n            <el-button type=\"primary\" @click=\"changeEditMode(true)\" icon=\"el-icon-edit\"\n                    v-if=\"!isInEditMode && isPresentationEditable\">\n              Edit\n            </el-button>\n            <el-button type=\"danger\" v-if=\"!isNewPresentation && isLogin && isPresentationEditable\"\n                    icon=\"el-icon-delete\" @click=\"deletePresentation()\">\n              Delete\n            </el-button>\n          </el-button-group>\n        </el-col>\n      </el-row>\n    </el-card>\n\n    <el-dialog title=\"Share with other users:\" :visible.sync=\"isAccessControlDialogVisible\" width=\"70%\"\n            :close-on-click-modal=\"false\">\n      <access-control-panel :presentationId=\"id\"></access-control-panel>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import AccessControlPanel from '@/components/AccessControlPanel'\n  import {downloadPDF} from \"@/store/helpers/pdfDownloader\"\n  import {downloadPPTX} from \"@/store/helpers/pptxDownloader\"\n  import {AccessLevel, ID_NEW_PRESENTATION, SPECIAL_IDENTIFIER_PUBLIC} from \"@/common/const\";\n  import {deepCopy} from \"@/common/utility\";\n\n  export default {\n    name: 'PresentationBrief',\n    props: {\n      id: String\n    },\n    mounted() {\n      this.updatePresentationForm();\n    },\n    watch: {\n      'id'() {\n        this.updatePresentationForm()\n      },\n    },\n    computed: {\n      isLogin() {\n        return this.$store.state.userInfo.isLogin\n      },\n      isPresentationEditable() {\n        return this.$store.state.presentation.isPresentationEditable;\n      },\n\n      presentationForm() {\n        return {\n          name: this.presentationFormName,\n          creatorIdentifier: this.presentationFormCreatorIdentifier,\n          description: this.presentationFormDescription,\n        }\n      },\n      presentationFormName: {\n        get() {\n          return this.$store.state.presentation.presentationForm.name\n        },\n        set(value) {\n          this.$store.commit('setPresentationFormField', {\n            field: 'name',\n            value\n          })\n        },\n      },\n      presentationFormCreatorIdentifier() {\n        return this.$store.state.presentation.presentationForm.creatorIdentifier\n      },\n      presentationFormDescription: {\n        get() {\n          return this.$store.state.presentation.presentationForm.description\n        },\n        set(value) {\n          this.$store.commit('setPresentationFormField', {\n            field: 'description',\n            value\n          })\n        },\n      },\n      isNewPresentation() {\n        return this.id === ID_NEW_PRESENTATION\n      },\n      isInEditMode() {\n        return this.isEditing || this.isNewPresentation\n      },\n      isLoading() {\n        return this.$store.state.presentation.presentationFormStatus.isLoading\n      },\n      isError() {\n        return this.$store.state.presentation.presentationFormStatus.isApiError\n      },\n      apiErrorMsg() {\n        return this.$store.state.presentation.presentationFormStatus.apiErrorMsg\n      }\n    },\n    data() {\n      return {\n        isEditing: false,\n        isAccessControlDialogVisible: false,\n        rules: {\n          name: [\n            {required: true, message: 'Please enter presentation name', trigger: 'blur'},\n            {min: 3, message: 'The length should be more than 3 character', trigger: 'blur'}\n          ]\n        }\n      }\n    },\n    methods: {\n      changeEditMode(isEditing) {\n        if (isEditing === false) {\n          this.updatePresentationForm();\n        }\n        this.isEditing = isEditing;\n      },\n\n      openAccessControlPanel() {\n        this.isAccessControlDialogVisible = true;\n      },\n\n      addPresentation() {\n        this.$refs['presentationForm'].validate((valid, object) => {\n          if (!valid) {\n\n            if('name' in object) {\n              this.$notify.error({\n                title: 'Error',\n                message: object.name[0].message\n              });\n            }\n            return\n          }\n          this.$refs['presentationForm'].clearValidate();\n          if (this.isNewPresentation) {\n            // add\n            this.$store.dispatch('savePresentation')\n                    .then(() => {\n                      if (this.isError) {\n                        return\n                      }\n                      // redirect to the newly added presentation\n                      this.$router.push({\n                        name: 'analyze',\n                        params: {\n                          id: this.$store.state.presentation.presentationForm.id\n                        }\n                      });\n                    });\n          } else {\n            // edit\n            this.$store.dispatch('updatePresentation')\n                    .then(() => {\n                      if (this.isError) {\n                        return\n                      }\n                      this.isEditing = false\n                    })\n          }\n        });\n      },\n      deletePresentation() {\n        this.$store.dispatch('deletePresentation', this.id)\n                .then(() => {\n                  if (this.isError) {\n                    return\n                  }\n                  this.$router.replace({\n                    name: 'analyze',\n                    params: {\n                      id: ID_NEW_PRESENTATION\n                    }\n                  });\n                  this.isEditing = false;\n                })\n      },\n      updatePresentationForm() {\n        if (this.$refs['presentationForm']) {\n          this.$refs['presentationForm'].clearValidate();\n        }\n        this.$store.commit('resetPresentationForm');\n        if (this.id !== ID_NEW_PRESENTATION) {\n          this.$store.dispatch('getPresentation', this.id)\n                  .then(() => {\n                    // check writable or not\n                    this.$store.dispatch('fetchAccessControlList', this.id)\n                            .then(() => {\n                              let currentUser = this.$store.state.userInfo.userEmail;\n                              let accessControlList = this.$store.state.accessControl.accessControlList;\n                              let isPresentationEditable =\n                                      currentUser === this.presentationFormCreatorIdentifier\n                                      || accessControlList.some(acl => acl.userIdentifier === currentUser && acl.accessLevel === AccessLevel.CAN_WRITE)\n                                      || accessControlList.some(acl => acl.userIdentifier === SPECIAL_IDENTIFIER_PUBLIC && acl.accessLevel === AccessLevel.CAN_WRITE);\n                              this.$store.commit('setIsPresentationEditable', isPresentationEditable)\n                            })\n                  })\n        }\n      },\n      downloadPDF() {\n        window.scrollTo(0, 0)\n        let vm = this;\n        let wasPresentationEditable = deepCopy(vm.isPresentationEditable);\n        vm.$store.commit('setIsPresentationEditable', false);\n        vm.$store.commit('setPageLoadingStatus', true);\n\n        this.$nextTick(() => {\n          downloadPDF(vm.presentationFormName).then(() => {\n            vm.$store.commit('setIsPresentationEditable', wasPresentationEditable);\n            vm.$store.commit('setPageLoadingStatus', false);\n          });\n        });\n      },\n      downloadPPTX() {\n        window.scrollTo(0, 0)\n        let vm = this;\n        let wasPresentationEditable = deepCopy(vm.isPresentationEditable);\n        vm.$store.commit('setIsPresentationEditable', false);\n        vm.$store.commit('setPageLoadingStatus', true);\n\n        this.$nextTick(() => {\n          downloadPPTX(vm.presentationFormName).then(() => {\n            vm.$store.commit('setIsPresentationEditable', wasPresentationEditable);\n            vm.$store.commit('setPageLoadingStatus', false);\n          });\n        });\n      }\n    },\n\n    components: {\n      AccessControlPanel\n    },\n  }\n</script>\n\n<style scoped>\n  .formStyle {\n    display: inline-block;\n    text-align: left;\n    margin-right: 8px;\n  }ß\n  .errorMsg {\n    margin-bottom: 18px;\n  }\n  .el-form-item__label {\n    font-weight: bold;\n  }\n  .el-card {\n    margin-bottom: 10px;\n  }\n  .details-card {\n    overflow-x: auto;\n  }\n  .download-section {\n    text-align:center;\n    vertical-align:middle;\n    margin-top: 1.5rem;\n  }\n  .options-section {\n    text-align:center;\n    vertical-align:middle;\n    margin-top: 1.5rem;\n  }\n  .v-divide {\n    float: left;\n    height: 6rem;\n    margin-top: -1.5rem;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}