{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\store\\modules\\presentation.js","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\store\\modules\\presentation.js","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Liu Ruiping\\\\Documents\\\\course-profile-mcomp\\\\proj\\\\chairvise3-0-final\\\\src\\\\web\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport axios from 'axios';\nimport { deepCopy } from \"@/common/utility\";\nexport default {\n  state: {\n    presentationList: [],\n    versionList: [],\n    presentationListStatus: {\n      isLoading: true,\n      isApiError: false,\n      apiErrorMsg: ''\n    },\n    presentationForm: {\n      id: '',\n      name: '',\n      version: '',\n      description: '',\n      creatorIdentifier: ''\n    },\n    presentationFormStatus: {\n      isLoading: false,\n      isApiError: false,\n      apiErrorMsg: ''\n    },\n    isSaveSuccess: false,\n    isPresentationEditable: false\n  },\n  mutations: {\n    setPresentationListLoading: function setPresentationListLoading(state, payload) {\n      if (payload) {\n        state.presentationListStatus.isApiError = false;\n      }\n\n      state.presentationListStatus.isLoading = payload;\n    },\n    setPresentationListApiError: function setPresentationListApiError(state, payload) {\n      state.presentationListStatus.isApiError = true;\n      state.presentationListStatus.apiErrorMsg = payload;\n    },\n    setPresentationList: function setPresentationList(state, payload) {\n      state.presentationList = payload;\n    },\n    setVersionList: function setVersionList(state, payload) {\n      state.versionList = payload;\n    },\n    addToPresentationList: function addToPresentationList(state, payload) {\n      state.presentationList.push(payload);\n    },\n    deleteFromPresentationList: function deleteFromPresentationList(state, payload) {\n      var index = state.presentationList.findIndex(function (presentation) {\n        return presentation.id === payload;\n      });\n      state.presentationList.splice(index, 1);\n    },\n    updatePresentationListWith: function updatePresentationListWith(state, payload) {\n      state.presentationList = state.presentationList.map(function (presentation) {\n        if (presentation.id === payload.id) {\n          return payload;\n        }\n\n        return presentation;\n      });\n    },\n    setPresentationFormLoading: function setPresentationFormLoading(state, isLoading) {\n      state.presentationFormStatus.isLoading = isLoading;\n    },\n    setPresentationFormApiError: function setPresentationFormApiError(state, msg) {\n      state.presentationFormStatus.isApiError = true;\n      state.presentationFormStatus.apiErrorMsg = msg;\n    },\n    setPresentationForm: function setPresentationForm(state, payload) {\n      state.presentationForm = payload;\n    },\n    resetPresentationForm: function resetPresentationForm(state) {\n      state.presentationForm.id = '';\n      state.presentationForm.name = '';\n      state.presentationForm.version = '';\n      state.presentationForm.description = '';\n      state.presentationForm.creatorIdentifier = '';\n      state.presentationFormStatus.isLoading = false;\n      state.presentationFormStatus.isApiError = false;\n      state.presentationFormStatus.apiErrorMsg = '';\n    },\n    setPresentationFormField: function setPresentationFormField(state, _ref) {\n      var field = _ref.field,\n          value = _ref.value;\n      state.presentationForm[field] = value;\n    },\n    setSaveSuccess: function setSaveSuccess(state, success) {\n      state.isSaveSuccess = success;\n    },\n    setIsPresentationEditable: function setIsPresentationEditable(state, isPresentationEditable) {\n      state.isPresentationEditable = isPresentationEditable;\n    }\n  },\n  actions: {\n    getPresentationList: function () {\n      var _getPresentationList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref2) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref2.commit;\n                commit('setPresentationListLoading', true);\n                axios.get('/api/presentations').then(function (response) {\n                  commit('setPresentationList', response.data);\n                }).catch(function (e) {\n                  commit('setPresentationListApiError', e.toString());\n                }).finally(function () {\n                  commit('setPresentationListLoading', false);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getPresentationList(_x) {\n        return _getPresentationList.apply(this, arguments);\n      }\n\n      return getPresentationList;\n    }(),\n    getVersionList: function () {\n      var _getVersionList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref3) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref3.commit;\n                commit('setPresentationListLoading', true);\n                axios.get('/api/version').then(function (response) {\n                  commit('setVersionList', response.data);\n                }).catch(function (e) {\n                  commit('setPresentationListApiError', e.toString());\n                }).finally(function () {\n                  commit('setPresentationListLoading', false);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getVersionList(_x2) {\n        return _getVersionList.apply(this, arguments);\n      }\n\n      return getVersionList;\n    }(),\n    getPresentation: function () {\n      var _getPresentation = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref4, presentationId) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref4.commit;\n                commit('setPresentationFormLoading', true);\n                _context3.next = 4;\n                return axios.get(\"/api/presentations/\".concat(presentationId)).then(function (response) {\n                  commit('setPresentationForm', response.data);\n                }).catch(function (e) {\n                  commit('setPresentationFormApiError', e.toString());\n                }).finally(function () {\n                  commit('setPresentationFormLoading', false);\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPresentation(_x3, _x4) {\n        return _getPresentation.apply(this, arguments);\n      }\n\n      return getPresentation;\n    }(),\n    savePresentation: function () {\n      var _savePresentation = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(_ref5) {\n        var commit, state;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref5.commit, state = _ref5.state;\n                commit('setPresentationFormLoading', true);\n                _context4.next = 4;\n                return axios.post('/api/presentations', state.presentationForm).then(function (response) {\n                  commit('addToPresentationList', deepCopy(response.data));\n                  commit('setPresentationForm', deepCopy(response.data));\n                  commit(\"setSaveSuccess\", true);\n                }).catch(function (e) {\n                  commit('setPresentationFormApiError', e.toString());\n                  commit(\"setSaveSuccess\", false);\n                }).finally(function () {\n                  commit('setPresentationFormLoading', false);\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function savePresentation(_x5) {\n        return _savePresentation.apply(this, arguments);\n      }\n\n      return savePresentation;\n    }(),\n    updatePresentation: function () {\n      var _updatePresentation = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(_ref6) {\n        var commit, state;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref6.commit, state = _ref6.state;\n                commit('setPresentationFormLoading', true);\n                _context5.next = 4;\n                return axios.put('/api/presentations/' + state.presentationForm.id, state.presentationForm).then(function (response) {\n                  commit('updatePresentationListWith', response.data);\n                }).catch(function (e) {\n                  commit('setPresentationFormApiError', e.toString());\n                }).finally(function () {\n                  commit('setPresentationFormLoading', false);\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function updatePresentation(_x6) {\n        return _updatePresentation.apply(this, arguments);\n      }\n\n      return updatePresentation;\n    }(),\n    deletePresentation: function () {\n      var _deletePresentation = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(_ref7, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                commit = _ref7.commit;\n                commit('setPresentationFormLoading', true);\n                _context6.next = 4;\n                return axios.delete('/api/presentations/' + payload).then(function () {\n                  commit('deleteFromPresentationList', payload);\n                  commit('resetPresentationForm');\n                }).catch(function (e) {\n                  commit('setPresentationFormApiError', e.toString());\n                }).finally(function () {\n                  commit('setPresentationFormLoading', false);\n                });\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deletePresentation(_x7, _x8) {\n        return _deletePresentation.apply(this, arguments);\n      }\n\n      return deletePresentation;\n    }()\n  }\n};",{"version":3,"sources":["C:/Users/Liu Ruiping/Documents/course-profile-mcomp/proj/chairvise3-0-final/src/web/app/src/store/modules/presentation.js"],"names":["axios","deepCopy","state","presentationList","versionList","presentationListStatus","isLoading","isApiError","apiErrorMsg","presentationForm","id","name","version","description","creatorIdentifier","presentationFormStatus","isSaveSuccess","isPresentationEditable","mutations","setPresentationListLoading","payload","setPresentationListApiError","setPresentationList","setVersionList","addToPresentationList","push","deleteFromPresentationList","index","findIndex","presentation","splice","updatePresentationListWith","map","setPresentationFormLoading","setPresentationFormApiError","msg","setPresentationForm","resetPresentationForm","setPresentationFormField","field","value","setSaveSuccess","success","setIsPresentationEditable","actions","getPresentationList","commit","get","then","response","data","catch","e","toString","finally","getVersionList","getPresentation","presentationId","savePresentation","post","updatePresentation","put","deletePresentation","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {deepCopy} from \"@/common/utility\"\n\nexport default {\n  state: {\n    presentationList: [],\n    versionList: [],\n    presentationListStatus: {\n      isLoading: true,\n      isApiError: false,\n      apiErrorMsg: '',\n    },\n    presentationForm: {\n      id: '',\n      name: '',\n      version: '',\n      description: '',\n      creatorIdentifier: '',\n    },\n\n    presentationFormStatus: {\n      isLoading: false,\n      isApiError: false,\n      apiErrorMsg: '',\n    },\n    isSaveSuccess: false,\n    isPresentationEditable: false\n  },\n  mutations: {\n    setPresentationListLoading(state, payload) {\n      if (payload) {\n        state.presentationListStatus.isApiError = false;\n      }\n      state.presentationListStatus.isLoading = payload;\n    },\n\n    setPresentationListApiError(state, payload) {\n      state.presentationListStatus.isApiError = true;\n      state.presentationListStatus.apiErrorMsg = payload;\n    },\n\n    setPresentationList(state, payload) {\n      state.presentationList = payload;\n    },\n\n    setVersionList(state, payload) {\n      state.versionList = payload;\n    },\n\n    addToPresentationList(state, payload) {\n      state.presentationList.push(payload);\n    },\n\n    deleteFromPresentationList(state, payload) {\n      const index = state.presentationList.findIndex(presentation => presentation.id === payload);\n      state.presentationList.splice(index, 1)\n    },\n\n    updatePresentationListWith(state, payload) {\n      state.presentationList = state.presentationList.map(presentation => {\n        if (presentation.id === payload.id) {\n          return payload\n        }\n        return presentation\n      });\n    },\n\n    setPresentationFormLoading(state, isLoading) {\n      state.presentationFormStatus.isLoading = isLoading;\n    },\n\n    setPresentationFormApiError(state, msg) {\n      state.presentationFormStatus.isApiError = true;\n      state.presentationFormStatus.apiErrorMsg = msg;\n    },\n\n    setPresentationForm(state, payload) {\n      state.presentationForm = payload;\n    },\n\n    resetPresentationForm(state) {\n      state.presentationForm.id = '';\n      state.presentationForm.name = '';\n      state.presentationForm.version = '';\n      state.presentationForm.description = '';\n      state.presentationForm.creatorIdentifier = '';\n      state.presentationFormStatus.isLoading = false;\n      state.presentationFormStatus.isApiError = false;\n      state.presentationFormStatus.apiErrorMsg = '';\n    },\n\n    setPresentationFormField(state, {field, value}) {\n      state.presentationForm[field] = value\n    },\n\n    setSaveSuccess(state, success) {\n      state.isSaveSuccess = success;\n    },\n    setIsPresentationEditable(state, isPresentationEditable) {\n      state.isPresentationEditable = isPresentationEditable;\n    }\n  },\n  actions: {\n    async getPresentationList({commit}) {\n      commit('setPresentationListLoading', true);\n      axios.get('/api/presentations')\n        .then(response => {\n          commit('setPresentationList', response.data)\n        })\n        .catch(e => {\n          commit('setPresentationListApiError', e.toString());\n        })\n        .finally(() => {\n          commit('setPresentationListLoading', false);\n        })\n    },\n\n    async getVersionList({commit}) {\n      commit('setPresentationListLoading', true);\n      axios.get('/api/version')\n          .then(response => {\n            commit('setVersionList', response.data)\n          })\n          .catch(e => {\n            commit('setPresentationListApiError', e.toString());\n          })\n          .finally(() => {\n            commit('setPresentationListLoading', false);\n          })\n    },\n\n    async getPresentation({commit}, presentationId) {\n      commit('setPresentationFormLoading', true);\n      await axios.get(`/api/presentations/${presentationId}`)\n          .then(response => {\n            commit('setPresentationForm', response.data)\n          })\n          .catch(e => {\n            commit('setPresentationFormApiError', e.toString());\n          })\n          .finally(() => {\n            commit('setPresentationFormLoading', false);\n          });\n    },\n\n    async savePresentation({commit, state}) {\n      commit('setPresentationFormLoading', true);\n      await axios.post('/api/presentations', state.presentationForm)\n          .then(response => {\n            commit('addToPresentationList', deepCopy(response.data));\n            commit('setPresentationForm', deepCopy(response.data));\n            commit(\"setSaveSuccess\", true);\n          })\n          .catch(e => {\n            commit('setPresentationFormApiError', e.toString());\n            commit(\"setSaveSuccess\", false);\n          })\n          .finally(() => {\n            commit('setPresentationFormLoading', false);\n          })\n    },\n\n    async updatePresentation({commit, state}) {\n      commit('setPresentationFormLoading', true);\n      await axios.put('/api/presentations/' + state.presentationForm.id, state.presentationForm)\n          .then(response => {\n            commit('updatePresentationListWith', response.data)\n          })\n          .catch(e => {\n            commit('setPresentationFormApiError', e.toString());\n          })\n          .finally(() => {\n            commit('setPresentationFormLoading', false);\n          })\n    },\n\n    async deletePresentation({commit}, payload) {\n      commit('setPresentationFormLoading', true);\n      await axios.delete('/api/presentations/' + payload)\n          .then(() => {\n            commit('deleteFromPresentationList', payload);\n            commit('resetPresentationForm')\n          })\n          .catch(e => {\n            commit('setPresentationFormApiError', e.toString());\n          })\n          .finally(() => {\n            commit('setPresentationFormLoading', false);\n          })\n    }\n  }\n};"]}]}