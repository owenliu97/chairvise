{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\store\\helpers\\pdfDownloader.js","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\store\\helpers\\pdfDownloader.js","mtime":1593244934000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Liu Ruiping\\\\Documents\\\\course-profile-mcomp\\\\proj\\\\chairvise3-0-final\\\\src\\\\web\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport JavascriptPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport { PDF_DESCRIPTION_MARGIN_TOP, PDF_CHART_MARGIN_LEFT, PDF_CHART_MARGIN_TOP, PDF_CHART_WIDTH, PDF_TITLE_FONT_SIZE, PDF_TITLE_MARGIN_LEFT, PDF_TITLE_MARGIN_TOP } from \"@/common/const\";\nvar doc, marginTop;\nexport function downloadPDF(presentationFormName) {\n  doc = new JavascriptPDF(\"p\", \"mm\", \"a4\");\n  marginTop = PDF_CHART_MARGIN_TOP;\n  doc.setFontSize(PDF_TITLE_FONT_SIZE);\n  doc.text(PDF_TITLE_MARGIN_LEFT, PDF_TITLE_MARGIN_TOP, presentationFormName);\n  return createPDF(presentationFormName);\n}\n\nfunction getDescription() {\n  return html2canvas(document.getElementById(\"presentation-description\")).then(function (element) {\n    var imageData = element.toDataURL(\"image/png\");\n\n    if (imageData === \"data:,\") {\n      // according to documentation of toDataURL, if the canvas is of 0 width, 0 height,\n      // the function will return string \"data:,\". If the canvas is empty, directly return\n      return;\n    }\n\n    var descriptionHeight = element.height * PDF_CHART_WIDTH / element.width;\n    doc.addImage(imageData, \"PNG\", PDF_CHART_MARGIN_LEFT, PDF_DESCRIPTION_MARGIN_TOP, PDF_CHART_WIDTH, descriptionHeight, \"\", \"FAST\");\n  });\n}\n\nfunction getChart(chartElement, idx) {\n  return html2canvas(chartElement).then(function (element) {\n    if (idx > 0 && idx % 2 === 0) {\n      doc.addPage();\n      marginTop = PDF_CHART_MARGIN_TOP;\n    }\n\n    var imageData = element.toDataURL(\"image/png\");\n    var chartHeight = element.height * PDF_CHART_WIDTH / element.width;\n    doc.addImage(imageData, \"PNG\", PDF_CHART_MARGIN_LEFT, marginTop, PDF_CHART_WIDTH, chartHeight, \"\", \"FAST\");\n    marginTop = chartHeight + marginTop * 2;\n  });\n}\n\nfunction createPDF(_x) {\n  return _createPDF.apply(this, arguments);\n}\n\nfunction _createPDF() {\n  _createPDF = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(pdfName) {\n    var chartElements, i;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getDescription();\n\n          case 2:\n            chartElements = document.getElementsByClassName(\"presentation-section\");\n            i = 0;\n\n          case 4:\n            if (!(i < chartElements.length)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return getChart(chartElements[i], i);\n\n          case 7:\n            i++;\n            _context.next = 4;\n            break;\n\n          case 10:\n            doc.save(pdfName + \".pdf\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createPDF.apply(this, arguments);\n}",{"version":3,"sources":["C:/Users/Liu Ruiping/Documents/course-profile-mcomp/proj/chairvise3-0-final/src/web/app/src/store/helpers/pdfDownloader.js"],"names":["JavascriptPDF","html2canvas","PDF_DESCRIPTION_MARGIN_TOP","PDF_CHART_MARGIN_LEFT","PDF_CHART_MARGIN_TOP","PDF_CHART_WIDTH","PDF_TITLE_FONT_SIZE","PDF_TITLE_MARGIN_LEFT","PDF_TITLE_MARGIN_TOP","doc","marginTop","downloadPDF","presentationFormName","setFontSize","text","createPDF","getDescription","document","getElementById","then","element","imageData","toDataURL","descriptionHeight","height","width","addImage","getChart","chartElement","idx","addPage","chartHeight","pdfName","chartElements","getElementsByClassName","i","length","save"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACEC,0BADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,eAJF,EAKEC,mBALF,EAMEC,qBANF,EAOEC,oBAPF,QAQO,gBARP;AAUA,IAAIC,GAAJ,EAASC,SAAT;AAEA,OAAO,SAASC,WAAT,CAAqBC,oBAArB,EAA2C;AAChDH,EAAAA,GAAG,GAAG,IAAIT,aAAJ,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B,IAA7B,CAAN;AACAU,EAAAA,SAAS,GAAGN,oBAAZ;AACAK,EAAAA,GAAG,CAACI,WAAJ,CAAgBP,mBAAhB;AACAG,EAAAA,GAAG,CAACK,IAAJ,CAASP,qBAAT,EAAgCC,oBAAhC,EAAsDI,oBAAtD;AAEA,SAAOG,SAAS,CAACH,oBAAD,CAAhB;AACD;;AAED,SAASI,cAAT,GAA0B;AACxB,SAAOf,WAAW,CAACgB,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,CAAD,CAAX,CAAiEC,IAAjE,CAAsE,UAAAC,OAAO,EAAI;AACtF,QAAIC,SAAS,GAAGD,OAAO,CAACE,SAAR,CAAkB,WAAlB,CAAhB;;AACA,QAAID,SAAS,KAAK,QAAlB,EAA4B;AAC1B;AACA;AACA;AACD;;AACD,QAAIE,iBAAiB,GAAGH,OAAO,CAACI,MAAR,GAAiBnB,eAAjB,GAAmCe,OAAO,CAACK,KAAnE;AACAhB,IAAAA,GAAG,CAACiB,QAAJ,CAAaL,SAAb,EAAwB,KAAxB,EAA+BlB,qBAA/B,EAAsDD,0BAAtD,EAAkFG,eAAlF,EAAmGkB,iBAAnG,EAAsH,EAAtH,EAA0H,MAA1H;AACD,GATM,CAAP;AAUD;;AAED,SAASI,QAAT,CAAkBC,YAAlB,EAAgCC,GAAhC,EAAqC;AACnC,SAAO5B,WAAW,CAAC2B,YAAD,CAAX,CAA0BT,IAA1B,CAA+B,UAAAC,OAAO,EAAI;AAC/C,QAAIS,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAN,KAAY,CAA3B,EAA8B;AAC5BpB,MAAAA,GAAG,CAACqB,OAAJ;AACApB,MAAAA,SAAS,GAAGN,oBAAZ;AACD;;AACD,QAAIiB,SAAS,GAAGD,OAAO,CAACE,SAAR,CAAkB,WAAlB,CAAhB;AACA,QAAIS,WAAW,GAAGX,OAAO,CAACI,MAAR,GAAiBnB,eAAjB,GAAmCe,OAAO,CAACK,KAA7D;AACAhB,IAAAA,GAAG,CAACiB,QAAJ,CAAaL,SAAb,EAAwB,KAAxB,EAA+BlB,qBAA/B,EAAsDO,SAAtD,EAAiEL,eAAjE,EAAkF0B,WAAlF,EAA+F,EAA/F,EAAmG,MAAnG;AACArB,IAAAA,SAAS,GAAGqB,WAAW,GAAGrB,SAAS,GAAG,CAAtC;AACD,GATM,CAAP;AAUD;;SAEcK,S;;;;;;;0BAAf,iBAAyBiB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQhB,cAAc,EADtB;;AAAA;AAEMiB,YAAAA,aAFN,GAEsBhB,QAAQ,CAACiB,sBAAT,CAAgC,sBAAhC,CAFtB;AAGWC,YAAAA,CAHX,GAGe,CAHf;;AAAA;AAAA,kBAGkBA,CAAC,GAAGF,aAAa,CAACG,MAHpC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIUT,QAAQ,CAACM,aAAa,CAACE,CAAD,CAAd,EAAmBA,CAAnB,CAJlB;;AAAA;AAG4CA,YAAAA,CAAC,EAH7C;AAAA;AAAA;;AAAA;AAME1B,YAAAA,GAAG,CAAC4B,IAAJ,CAASL,OAAO,GAAG,MAAnB;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import JavascriptPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport {\n  PDF_DESCRIPTION_MARGIN_TOP,\n  PDF_CHART_MARGIN_LEFT,\n  PDF_CHART_MARGIN_TOP,\n  PDF_CHART_WIDTH,\n  PDF_TITLE_FONT_SIZE,\n  PDF_TITLE_MARGIN_LEFT,\n  PDF_TITLE_MARGIN_TOP\n} from \"@/common/const\";\n\nlet doc, marginTop;\n\nexport function downloadPDF(presentationFormName) {\n  doc = new JavascriptPDF(\"p\", \"mm\", \"a4\");\n  marginTop = PDF_CHART_MARGIN_TOP;\n  doc.setFontSize(PDF_TITLE_FONT_SIZE);\n  doc.text(PDF_TITLE_MARGIN_LEFT, PDF_TITLE_MARGIN_TOP, presentationFormName);\n\n  return createPDF(presentationFormName);\n}\n\nfunction getDescription() {\n  return html2canvas(document.getElementById(\"presentation-description\")).then(element => {\n    let imageData = element.toDataURL(\"image/png\");\n    if (imageData === \"data:,\") {\n      // according to documentation of toDataURL, if the canvas is of 0 width, 0 height,\n      // the function will return string \"data:,\". If the canvas is empty, directly return\n      return;\n    }\n    let descriptionHeight = element.height * PDF_CHART_WIDTH / element.width;\n    doc.addImage(imageData, \"PNG\", PDF_CHART_MARGIN_LEFT, PDF_DESCRIPTION_MARGIN_TOP, PDF_CHART_WIDTH, descriptionHeight, \"\", \"FAST\");\n  });\n}\n\nfunction getChart(chartElement, idx) {\n  return html2canvas(chartElement).then(element => {\n    if (idx > 0 && idx % 2 === 0) {\n      doc.addPage();\n      marginTop = PDF_CHART_MARGIN_TOP;\n    }\n    let imageData = element.toDataURL(\"image/png\");\n    let chartHeight = element.height * PDF_CHART_WIDTH / element.width;\n    doc.addImage(imageData, \"PNG\", PDF_CHART_MARGIN_LEFT, marginTop, PDF_CHART_WIDTH, chartHeight, \"\", \"FAST\");\n    marginTop = chartHeight + marginTop * 2;\n  });\n}\n\nasync function createPDF(pdfName) {\n  await getDescription();\n  let chartElements = document.getElementsByClassName(\"presentation-section\");\n  for (let i = 0; i < chartElements.length; i++) {\n    await getChart(chartElements[i], i);\n  }\n  doc.save(pdfName + \".pdf\");\n}\n"]}]}