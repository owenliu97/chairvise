{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\views\\ViewConferences.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\views\\ViewConferences.vue","mtime":1591977194000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ZoomCenterTransition } from 'vue2-transitions';\nimport { FullCalendar } from 'vue-full-calendar';\nimport ConferenceBrief from \"@/components/ConferenceBrief.vue\";\nexport default {\n  name: 'ViewConferences',\n  props: {\n    id: String\n  },\n  data: function data() {\n    return {\n      show: false,\n      config: {\n        height: 500,\n        editable: false\n      }\n    };\n  },\n  watch: {\n    'isError': function isError() {\n      if (!this.isError) {\n        return;\n      }\n\n      this.$notify.error({\n        title: 'Conference list API request fail',\n        message: this.$store.state.conference.conferenceListStatus.apiErrorMsg,\n        duration: 0\n      });\n    }\n  },\n  computed: {\n    isLogin: function isLogin() {\n      return this.$store.state.userInfo.isLogin;\n    },\n    isAppLoading: function isAppLoading() {\n      return this.$store.state.isPageLoading;\n    },\n    isLoading: function isLoading() {\n      return this.$store.state.conference.conferenceListStatus.isLoading;\n    },\n    conferences: function conferences() {\n      var list = this.$store.state.conference.conferenceList;\n      var tzoffset = new Date().getTimezoneOffset() * 60000; //offset in milliseconds\n\n      var newList = [];\n      list.forEach(function (element) {\n        var temp = new Date(element.date);\n        var date = new Date(temp - tzoffset).toISOString().slice(0, -1);\n        newList.push({\n          id: element.id,\n          title: element.name,\n          start: date,\n          allDay: false\n        });\n      });\n      return newList;\n    },\n    isError: function isError() {\n      return this.$store.state.conference.conferenceListStatus.isApiError;\n    }\n  },\n  components: {\n    ZoomCenterTransition: ZoomCenterTransition,\n    FullCalendar: FullCalendar,\n    ConferenceBrief: ConferenceBrief\n  },\n  methods: {\n    createConference: function createConference() {\n      this.$router.push(\"/conference/add\");\n    },\n    loadConferences: function loadConferences() {\n      this.show = true;\n    },\n    viewConference: function viewConference(id) {\n      this.$router.push(\"/conference/\" + id);\n    },\n    eventSelected: function eventSelected(event) {\n      this.viewConference(event.id);\n    }\n  },\n  mounted: function mounted() {\n    this.$store.dispatch('getConferenceList');\n    this.loadConferences();\n  }\n};",{"version":3,"sources":["ViewConferences.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <el-main>\n        <h1 class=\"alignLeft\">My Conferences </h1>\n        <el-button class=\"alignRight\" type=\"primary\" icon=\"el-icon-plus\" @click=\"createConference\">Add New Conference</el-button>\n        <br/>\n        <el-divider></el-divider>\n        <zoom-center-transition :duration=\"500\" :delay=\"100\">\n            <el-card v-show=\"show\">\n                <FullCalendar :events=\"conferences\" ref=\"fullCalendar\" \n                        defaultView='month' :config=\"config\"\n                        @event-selected=\"eventSelected\"/>\n            </el-card>\n        </zoom-center-transition>\n    </el-main>\n</template>\n\n<script>\n    import {ZoomCenterTransition} from 'vue2-transitions'\n    import { FullCalendar } from 'vue-full-calendar'    \n    import ConferenceBrief from \"@/components/ConferenceBrief.vue\";\n\n    export default {\n        name: 'ViewConferences',\n        props: {\n            id: String,\n        },\n        data() {\n            return {\n                show: false,\n                config: {\n                    height: 500,\n                    editable: false,\n                },\n            }\n        },\n        watch: {\n            'isError'() {\n                if (!this.isError) {\n                    return\n                }\n                this.$notify.error({\n                    title: 'Conference list API request fail',\n                    message: this.$store.state.conference.conferenceListStatus.apiErrorMsg,\n                    duration: 0\n                });\n            }\n        },\n        computed: {\n            isLogin() {\n                return this.$store.state.userInfo.isLogin\n            },\n            isAppLoading() {\n                return this.$store.state.isPageLoading\n            },\n            isLoading() {\n                return this.$store.state.conference.conferenceListStatus.isLoading\n            },\n            conferences() {\n                let list = this.$store.state.conference.conferenceList;\n                var tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n                let newList = [];\n                list.forEach((element) => {\n                    var temp = new Date(element.date);\n                    var date = (new Date(temp - tzoffset)).toISOString().slice(0, -1);\n                    newList.push({\n                        id: element.id,\n                        title: element.name,\n                        start: date,\n                        allDay: false\n                    })\n                });\n                return newList; \n            },\n            isError() {\n                return this.$store.state.conference.conferenceListStatus.isApiError\n            },\n        },\n        components: {\n            ZoomCenterTransition,\n            FullCalendar,\n            ConferenceBrief\n        },\n        methods: {\n            createConference() {\n                this.$router.push(\"/conference/add\");\n            },\n            loadConferences() {\n                this.show = true;\n            },\n            viewConference(id) {\n                this.$router.push(\"/conference/\" + id);\n            },\n            eventSelected(event) {\n                this.viewConference(event.id);\n            }\n        },\n        mounted() {\n            this.$store.dispatch('getConferenceList')\n            this.loadConferences();\n        }\n    }\n</script>\n\n<style scoped>\n    .alignLeft {\n        float: left;\n        display: inline-block;\n        margin: 0;\n    }\n    .alignRight {\n        float: right;\n        display: inline-block;\n        margin: 0;\n    }\n    .background {\n        background-color: transparent;\n        border-style: hidden;\n    }\n    .conferenceCard {\n        width: 100%;\n        height: 100%;\n        margin-bottom: 16px;\n        background-color: white;\n        text-align:left;\n        color: black;\n        padding: 4px 16px;\n    }\n\n    .el-card__body {\n    }\n    .menuCard {\n        width: 100%;\n        height: 100%;\n    }\n    .infinite-list {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n    .conferenceCard .button {\n        color: black;\n        text-align: left;\n    }\n    .presentation-image {\n        text-align: center;\n        vertical-align: middle;\n        margin-top: 1rem;\n    }\n    .presentation-id {\n        margin-top: 1.7rem;\n    }\n    .right {\n        float:right;\n    }\n</style>"],"sourceRoot":"src/views"}]}