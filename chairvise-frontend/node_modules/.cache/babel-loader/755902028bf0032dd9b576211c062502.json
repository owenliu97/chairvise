{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\RadarChartSectionDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\RadarChartSectionDetail.vue","mtime":1591632948000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport RadarChart from '@/components/sectionDetail/chart/RadarChart.vue';\nimport BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue';\nimport { generateBorderColor, generateBackgroundColor } from '@/common/color';\nexport default {\n  name: \"RadarChartSectionDetail\",\n  props: {\n    sectionDetail: {\n      type: Object,\n      required: true\n    },\n    presentationId: {\n      type: String,\n      required: true\n    },\n    version: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      editFormSelectionsRule: [{\n        validator: function validator(rule, value, callback) {\n          if (value.expression.length === 0 || value.expression.rename === 0) {\n            return callback(new Error('Please specify all field for the selection'));\n          }\n\n          callback();\n        },\n        trigger: 'blur'\n      }],\n      editFormInvolvedRecordsRule: [{\n        validator: function validator(rule, value, callback) {\n          if (value.length < 1) {\n            return callback(new Error('There must be one record involved'));\n          }\n\n          callback();\n        },\n        trigger: 'change'\n      }],\n      editFormFiltersRule: [{\n        validator: function validator(rule, value, callback) {\n          if (value.field.length === 0 || value.comparator.length === 0 || value.value.length === 0) {\n            return callback(new Error('Please specify all fields'));\n          }\n\n          callback();\n        },\n        trigger: 'blur'\n      }],\n      editFormSortersRule: [{\n        validator: function validator(rule, value, callback) {\n          if (value.field.length === 0 || value.order.length === 0) {\n            return callback(new Error('Please specify all fields'));\n          }\n\n          callback();\n        },\n        trigger: 'blur'\n      }],\n      editFormGroupersRule: [],\n      extraFormItemsRules: {\n        xAxisFieldName: [{\n          required: true,\n          message: 'There should be one field to map x axis',\n          trigger: 'blur'\n        }],\n        yAxisFieldName: [{\n          required: true,\n          message: 'There should be one field to map y axis',\n          trigger: 'blur'\n        }]\n      },\n      labels: [],\n      dataset: {},\n      partialResult: [],\n      options: {}\n    };\n  },\n  computed: {\n    hasData: function hasData() {\n      return this.labels.length !== 0;\n    },\n    chartData: function chartData() {\n      return {\n        labels: this.labels,\n        datasets: [this.dataset]\n      };\n    }\n  },\n  methods: {\n    updateVisualisation: function updateVisualisation(_ref) {\n      var result = _ref.result,\n          extraData = _ref.extraData;\n      this.partialResult = result.slice(0, extraData.numOfResultToDisplay); // process x axis\n\n      this.labels = this.partialResult.map(function (record) {\n        return record[extraData.xAxisFieldName];\n      }); // process y axis\n\n      this.dataset = {\n        borderWidth: 2,\n        data: this.partialResult.map(function (record) {\n          return record[extraData.yAxisFieldName];\n        }),\n        backgroundColor: 'rgba(175, 175, 175, 0.3)',\n        borderColor: 'rgb(175, 175, 175, 0.6)',\n        pointRadius: 4,\n        pointBorderColor: generateBorderColor(this.partialResult.length),\n        pointBackgroundColor: generateBackgroundColor(this.partialResult.length)\n      };\n      this.options = {\n        legend: false,\n        labels: {\n          display: false\n        },\n        layout: {\n          padding: 30\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          display: false\n        },\n        plugins: {\n          datalabels: {\n            backgroundColor: generateBackgroundColor(this.partialResult.length),\n            anchor: 'end',\n            align: 'end'\n          }\n        },\n        scale: {\n          ticks: {\n            display: false\n          },\n          pointLabels: {\n            callback: function callback(value) {\n              if (value.toString().length > 24) {\n                return value.toString().substr(0, 23) + '...'; //truncate\n              } else {\n                return value;\n              }\n            }\n          }\n        }\n      };\n    }\n  },\n  components: {\n    BasicSectionDetail: BasicSectionDetail,\n    RadarChart: RadarChart\n  }\n};",{"version":3,"sources":["RadarChartSectionDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,OAAA,UAAA,MAAA,iDAAA;AACA,OAAA,kBAAA,MAAA,mDAAA;AACA,SAAA,mBAAA,EAAA,uBAAA,QAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,yBADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AATA,GAHA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA;AACA,MAAA,sBAAA,EAAA,CAAA;AACA,QAAA,SAAA,EAAA,mBAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,cAAA,KAAA,CAAA,UAAA,CAAA,MAAA,KAAA,CAAA,IAAA,KAAA,CAAA,UAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,mBAAA,QAAA,CAAA,IAAA,KAAA,CAAA,4CAAA,CAAA,CAAA;AACA;;AACA,UAAA,QAAA;AACA,SANA;AAOA,QAAA,OAAA,EAAA;AAPA,OAAA,CADA;AAUA,MAAA,2BAAA,EAAA,CAAA;AACA,QAAA,SAAA,EAAA,mBAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,cAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,mBAAA,QAAA,CAAA,IAAA,KAAA,CAAA,mCAAA,CAAA,CAAA;AACA;;AACA,UAAA,QAAA;AACA,SANA;AAOA,QAAA,OAAA,EAAA;AAPA,OAAA,CAVA;AAmBA,MAAA,mBAAA,EAAA,CAAA;AACA,QAAA,SAAA,EAAA,mBAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,cAAA,KAAA,CAAA,KAAA,CAAA,MAAA,KAAA,CAAA,IAAA,KAAA,CAAA,UAAA,CAAA,MAAA,KAAA,CAAA,IAAA,KAAA,CAAA,KAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,mBAAA,QAAA,CAAA,IAAA,KAAA,CAAA,2BAAA,CAAA,CAAA;AACA;;AACA,UAAA,QAAA;AACA,SANA;AAOA,QAAA,OAAA,EAAA;AAPA,OAAA,CAnBA;AA4BA,MAAA,mBAAA,EAAA,CAAA;AACA,QAAA,SAAA,EAAA,mBAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,cAAA,KAAA,CAAA,KAAA,CAAA,MAAA,KAAA,CAAA,IAAA,KAAA,CAAA,KAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,mBAAA,QAAA,CAAA,IAAA,KAAA,CAAA,2BAAA,CAAA,CAAA;AACA;;AACA,UAAA,QAAA;AACA,SANA;AAOA,QAAA,OAAA,EAAA;AAPA,OAAA,CA5BA;AAqCA,MAAA,oBAAA,EAAA,EArCA;AAuCA,MAAA,mBAAA,EAAA;AACA,QAAA,cAAA,EAAA,CAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,OAAA,EAAA,yCAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SAAA,CADA;AAMA,QAAA,cAAA,EAAA,CAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,OAAA,EAAA,yCAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SAAA;AANA,OAvCA;AAoDA,MAAA,MAAA,EAAA,EApDA;AAqDA,MAAA,OAAA,EAAA,EArDA;AAsDA,MAAA,aAAA,EAAA,EAtDA;AAuDA,MAAA,OAAA,EAAA;AAvDA,KAAA;AAyDA,GA5EA;AA8EA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,KAAA,CAAA;AACA,KAHA;AAKA,IAAA,SALA,uBAKA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,KAAA,MADA;AAEA,QAAA,QAAA,EAAA,CAAA,KAAA,OAAA;AAFA,OAAA;AAIA;AAVA,GA9EA;AA2FA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,qCACA;AAAA,UAAA,MAAA,QAAA,MAAA;AAAA,UAAA,SAAA,QAAA,SAAA;AACA,WAAA,aAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,SAAA,CAAA,oBAAA,CAAA,CADA,CAEA;;AACA,WAAA,MAAA,GAAA,KAAA,aAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA;AAAA,OAAA,CAAA,CAHA,CAKA;;AACA,WAAA,OAAA,GAAA;AACA,QAAA,WAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,KAAA,aAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,iBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA;AAAA,SAAA,CAFA;AAGA,QAAA,eAAA,EAAA,0BAHA;AAIA,QAAA,WAAA,EAAA,yBAJA;AAKA,QAAA,WAAA,EAAA,CALA;AAMA,QAAA,gBAAA,EAAA,mBAAA,CAAA,KAAA,aAAA,CAAA,MAAA,CANA;AAOA,QAAA,oBAAA,EAAA,uBAAA,CAAA,KAAA,aAAA,CAAA,MAAA;AAPA,OAAA;AAUA,WAAA,OAAA,GAAA;AACA,QAAA,MAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SAFA;AAKA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SALA;AAQA,QAAA,UAAA,EAAA,IARA;AASA,QAAA,mBAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SAVA;AAaA,QAAA,OAAA,EAAA;AACA,UAAA,UAAA,EAAA;AACA,YAAA,eAAA,EAAA,uBAAA,CAAA,KAAA,aAAA,CAAA,MAAA,CADA;AAEA,YAAA,MAAA,EAAA,KAFA;AAGA,YAAA,KAAA,EAAA;AAHA;AADA,SAbA;AAoBA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,OAAA,EAAA;AADA,WADA;AAIA,UAAA,WAAA,EAAA;AACA,YAAA,QAAA,EAAA,kBAAA,KAAA,EAAA;AACA,kBAAA,KAAA,CAAA,QAAA,GAAA,MAAA,GAAA,EAAA,EAAA;AACA,uBAAA,KAAA,CAAA,QAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,IAAA,KAAA,CADA,CACA;AACA,eAFA,MAEA;AACA,uBAAA,KAAA;AACA;AACA;AAPA;AAJA;AApBA,OAAA;AAmCA;AApDA,GA3FA;AAkJA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA,kBADA;AAEA,IAAA,UAAA,EAAA;AAFA;AAlJA,CAAA","sourcesContent":["<template>\r\n  <basic-section-detail :section-detail=\"sectionDetail\" :presentation-id=\"presentationId\" :has-data=\"hasData\"\r\n                        :version=\"version\"\r\n                        :edit-form-selections-rule=\"editFormSelectionsRule\"\r\n                        :edit-form-involved-records-rule=\"editFormInvolvedRecordsRule\"\r\n                        :edit-form-filters-rule=\"editFormFiltersRule\"\r\n                        :edit-form-groupers-rule=\"editFormGroupersRule\"\r\n                        :edit-form-sorters-rule=\"editFormSortersRule\"\r\n                        :extraFormItemsRules=\"extraFormItemsRules\"\r\n                        @update-visualisation=\"updateVisualisation\">\r\n    <radar-chart :chart-data=\"chartData\" :options=\"options\"></radar-chart>\r\n\r\n    <template slot=\"extraFormItems\" slot-scope=\"slotProps\">\r\n      <el-form-item label=\"xAxis Field Name\" prop=\"extraData.xAxisFieldName\" v-if=\"slotProps.isInAdvancedMode\">\r\n        <el-select placeholder=\"xAxisFieldName\" v-model=\"slotProps.extraData.xAxisFieldName\">\r\n          <el-option\r\n            v-for=\"selection in slotProps.editForm.selections\"\r\n            :key=\"selection.rename\"\r\n            :label=\"selection.rename\"\r\n            :value=\"selection.rename\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"yAxis Field Name\" prop=\"extraData.yAxisFieldName\" v-if=\"slotProps.isInAdvancedMode\">\r\n        <el-select placeholder=\"yAxisFieldName\" v-model=\"slotProps.extraData.yAxisFieldName\">\r\n          <el-option\r\n            v-for=\"selection in slotProps.editForm.selections\"\r\n            :key=\"selection.rename\"\r\n            :label=\"selection.rename\"\r\n            :value=\"selection.rename\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"Legend Label Name\" prop=\"extraData.dataSetLabel\" v-if=\"slotProps.isInAdvancedMode\">\r\n        <el-input v-model=\"slotProps.extraData.dataSetLabel\" placeholder=\"Label Name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"Num of result to display\" prop=\"extraData.numOfResultToDisplay\"\r\n                    v-if=\"slotProps.isInAdvancedMode\">\r\n        <el-slider v-model=\"slotProps.extraData.numOfResultToDisplay\" :min=\"5\" :max=\"30\"></el-slider>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"slotProps.isInAdvancedMode\"\r\n                    v-for=\"(tooltip, index) in slotProps.extraData.fieldsShownInToolTips\" :label=\"'Tooltips ' + index\"\r\n                    :key=\"'tooltips' + index\">\r\n        <el-select placeholder=\"Field\" v-model=\"tooltip.field\">\r\n          <el-option\r\n            v-for=\"selection in slotProps.editForm.selections\"\r\n            :key=\"selection.rename\"\r\n            :label=\"selection.rename\"\r\n            :value=\"selection.rename\">\r\n          </el-option>\r\n        </el-select>&nbsp;\r\n        <el-input v-model=\"tooltip.label\" placeholder=\"Label Name\" style=\"width: 150px\"></el-input>&nbsp;\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" circle\r\n                   @click=\"removeTooltip(slotProps.extraData.fieldsShownInToolTips, tooltip)\"></el-button>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"slotProps.isInAdvancedMode\">\r\n        <el-button type=\"success\" plain @click=\"addTooltip(slotProps.extraData.fieldsShownInToolTips)\">Add Tooltip\r\n        </el-button>\r\n      </el-form-item>\r\n    </template>\r\n  </basic-section-detail>\r\n</template>\r\n\r\n<script>\r\n  import RadarChart from '@/components/sectionDetail/chart/RadarChart.vue'\r\n  import BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue'\r\n  import {generateBorderColor, generateBackgroundColor} from '@/common/color'\r\n\r\n  export default {\r\n    name: \"RadarChartSectionDetail\",\r\n\r\n    props: {\r\n      sectionDetail: {\r\n        type: Object,\r\n        required: true\r\n      },\r\n      presentationId: {\r\n        type: String,\r\n        required: true\r\n      },      \r\n      version: {\r\n        type: String,\r\n        required: true\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        editFormSelectionsRule: [{\r\n          validator: (rule, value, callback) => {\r\n            if (value.expression.length === 0 || value.expression.rename === 0) {\r\n              return callback(new Error('Please specify all field for the selection'))\r\n            }\r\n            callback();\r\n          },\r\n          trigger: 'blur',\r\n        }],\r\n        editFormInvolvedRecordsRule: [{\r\n          validator: (rule, value, callback) => {\r\n            if (value.length < 1) {\r\n              return callback(new Error('There must be one record involved'))\r\n            }\r\n            callback();\r\n          },\r\n          trigger: 'change',\r\n        }],\r\n        editFormFiltersRule: [{\r\n          validator: (rule, value, callback) => {\r\n            if (value.field.length === 0 || value.comparator.length === 0 || value.value.length === 0) {\r\n              return callback(new Error('Please specify all fields'))\r\n            }\r\n            callback();\r\n          },\r\n          trigger: 'blur',\r\n        }],\r\n        editFormSortersRule: [{\r\n          validator: (rule, value, callback) => {\r\n            if (value.field.length === 0 || value.order.length === 0) {\r\n              return callback(new Error('Please specify all fields'))\r\n            }\r\n            callback();\r\n          },\r\n          trigger: 'blur',\r\n        }],\r\n        editFormGroupersRule: [],\r\n\r\n        extraFormItemsRules: {\r\n          xAxisFieldName: [{\r\n            required: true,\r\n            message: 'There should be one field to map x axis',\r\n            trigger: 'blur',\r\n          }],\r\n          yAxisFieldName: [{\r\n            required: true,\r\n            message: 'There should be one field to map y axis',\r\n            trigger: 'blur',\r\n          }],\r\n        },\r\n\r\n        labels: [],\r\n        dataset: {},\r\n        partialResult: [],\r\n        options: {},\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      hasData() {\r\n        return this.labels.length !== 0;\r\n      },\r\n\r\n      chartData() {\r\n        return {\r\n          labels: this.labels,\r\n          datasets: [this.dataset]\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      updateVisualisation({result, extraData}) {\r\n        this.partialResult = result.slice(0, extraData.numOfResultToDisplay);\r\n        // process x axis\r\n        this.labels = this.partialResult.map(record => record[extraData.xAxisFieldName]);\r\n\r\n        // process y axis\r\n        this.dataset = {\r\n          borderWidth: 2,\r\n          data: this.partialResult.map(record => record[extraData.yAxisFieldName]),\r\n          backgroundColor: 'rgba(175, 175, 175, 0.3)',\r\n          borderColor: 'rgb(175, 175, 175, 0.6)',\r\n          pointRadius: 4,\r\n          pointBorderColor: generateBorderColor(this.partialResult.length),\r\n          pointBackgroundColor: generateBackgroundColor(this.partialResult.length),\r\n        };\r\n\r\n        this.options = {\r\n          legend: false,\r\n          labels: {\r\n            display: false\r\n          },\r\n          layout: {\r\n            padding: 30\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            display: false\r\n          },\r\n          plugins: {\r\n            datalabels: {\r\n              backgroundColor: generateBackgroundColor(this.partialResult.length),\r\n              anchor: 'end',\r\n              align: 'end'\r\n            }\r\n          },\r\n          scale: {\r\n            ticks: {\r\n              display: false\r\n            },\r\n            pointLabels: {\r\n              callback: value => {\r\n                if (value.toString().length > 24) {\r\n                 return value.toString().substr(0, 23) + '...'; //truncate\r\n                   } else {\r\n                 return value;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n    },\r\n\r\n    components: {\r\n      BasicSectionDetail,\r\n      RadarChart\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components/sectionDetail"}]}