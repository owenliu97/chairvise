{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\store\\modules\\section.js","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\store\\modules\\section.js","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Liu Ruiping\\\\Documents\\\\course-profile-mcomp\\\\proj\\\\chairvise3-0-final\\\\src\\\\web\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport axios from 'axios';\nimport PredefinedQueries from \"@/store/data/predefinedQueries\";\nexport default {\n  state: {\n    sectionList: [],\n    sectionListStatus: {\n      isLoading: false,\n      isApiError: false,\n      apiErrorMsg: ''\n    }\n  },\n  mutations: {\n    setSectionListLoading: function setSectionListLoading(state, isLoading) {\n      if (isLoading) {\n        state.sectionListStatus.isApiError = false;\n      }\n\n      state.sectionListStatus.isLoading = isLoading;\n    },\n    setSectionListApiError: function setSectionListApiError(state, msg) {\n      state.sectionListStatus.isApiError = true;\n      state.sectionListStatus.apiErrorMsg = msg;\n    },\n    clearSectionList: function clearSectionList(state) {\n      state.sectionList = [];\n    },\n    addSectionDetail: function addSectionDetail(state, payload) {\n      state.sectionList.push(Object.assign({\n        result: [],\n        previewResult: [],\n        status: {\n          isLoading: false,\n          isApiError: false,\n          apiErrorMsg: '',\n          apiErrorMsgDetail: ''\n        }\n      }, payload));\n    },\n    deleteSectionDetail: function deleteSectionDetail(state, payload) {\n      var index = state.sectionList.findIndex(function (s) {\n        return s.id === payload;\n      });\n      state.sectionList.splice(index, 1);\n    },\n    updateSectionDetail: function updateSectionDetail(state, _ref) {\n      var id = _ref.id,\n          title = _ref.title,\n          description = _ref.description,\n          dataSet = _ref.dataSet,\n          selections = _ref.selections,\n          involvedRecords = _ref.involvedRecords,\n          filters = _ref.filters,\n          joiners = _ref.joiners,\n          groupers = _ref.groupers,\n          sorters = _ref.sorters,\n          extraData = _ref.extraData;\n      var section = findSectionDetailById(state.sectionList, id);\n      section.title = title;\n      section.description = description;\n      section.dataSet = dataSet;\n      section.selections = selections;\n      section.involvedRecords = involvedRecords;\n      section.filters = filters;\n      section.joiners = joiners;\n      section.groupers = groupers;\n      section.sorters = sorters;\n      section.extraData = extraData;\n    },\n    setSectionDetailLoading: function setSectionDetailLoading(state, _ref2) {\n      var id = _ref2.id,\n          isLoading = _ref2.isLoading;\n      var section = findSectionDetailById(state.sectionList, id);\n\n      if (isLoading) {\n        section.status.isApiError = false;\n      }\n\n      section.status.isLoading = isLoading;\n    },\n    setSectionDetailApiError: function setSectionDetailApiError(state, _ref3) {\n      var id = _ref3.id,\n          msg = _ref3.msg,\n          msgDetail = _ref3.msgDetail;\n      var section = findSectionDetailById(state.sectionList, id);\n      section.status.isApiError = true;\n      section.status.apiErrorMsg = msg;\n      section.status.apiErrorMsgDetail = msgDetail;\n    },\n    updateSectionAnalysisResult: function updateSectionAnalysisResult(state, _ref4) {\n      var id = _ref4.id,\n          result = _ref4.result;\n      var section = findSectionDetailById(state.sectionList, id);\n      section.result = result;\n    },\n    updateSectionAnalysisPreviewResult: function updateSectionAnalysisPreviewResult(state, _ref5) {\n      var id = _ref5.id,\n          result = _ref5.result;\n      var section = findSectionDetailById(state.sectionList, id);\n      section.previewResult = result;\n    }\n  },\n  actions: {\n    fetchSectionList: function () {\n      var _fetchSectionList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref6, presentationId) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref6.commit;\n                commit('setSectionListLoading', true);\n                _context.next = 4;\n                return axios.get(\"/api/presentations/\".concat(presentationId, \"/sections\")).then(function (response) {\n                  commit('clearSectionList');\n                  response.data.forEach(function (s) {\n                    commit('addSectionDetail', s);\n                  });\n                }).catch(function (e) {\n                  commit('setSectionListApiError', e.toString());\n                }).finally(function () {\n                  commit('setSectionListLoading', false);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetchSectionList(_x, _x2) {\n        return _fetchSectionList.apply(this, arguments);\n      }\n\n      return fetchSectionList;\n    }(),\n    addSectionDetail: function () {\n      var _addSectionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref7, _ref8) {\n        var commit, presentationId, selectedNewSection, dataSet, newSection;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref7.commit;\n                presentationId = _ref8.presentationId, selectedNewSection = _ref8.selectedNewSection, dataSet = _ref8.dataSet;\n                commit('setSectionListLoading', true);\n                newSection = PredefinedQueries[selectedNewSection].data;\n                newSection = JSON.parse(JSON.stringify(newSection).replace(/\\${PLACEHOLDER_DATA_SET}/g, dataSet));\n                _context2.next = 7;\n                return axios.post(\"/api/presentations/\".concat(presentationId, \"/sections\"), newSection).then(function (response) {\n                  commit('addSectionDetail', response.data);\n                }).catch(function (e) {\n                  commit('setSectionListApiError', e.toString());\n                }).finally(function () {\n                  commit('setSectionListLoading', false);\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function addSectionDetail(_x3, _x4) {\n        return _addSectionDetail.apply(this, arguments);\n      }\n\n      return addSectionDetail;\n    }(),\n    saveSectionDetail: function () {\n      var _saveSectionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref9, _ref10) {\n        var commit, id, presentationId, title, description, dataSet, selections, involvedRecords, filters, joiners, groupers, sorters, extraData;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref9.commit;\n                id = _ref10.id, presentationId = _ref10.presentationId, title = _ref10.title, description = _ref10.description, dataSet = _ref10.dataSet, selections = _ref10.selections, involvedRecords = _ref10.involvedRecords, filters = _ref10.filters, joiners = _ref10.joiners, groupers = _ref10.groupers, sorters = _ref10.sorters, extraData = _ref10.extraData;\n                commit('setSectionDetailLoading', {\n                  id: id,\n                  isLoading: true\n                });\n                _context3.next = 5;\n                return axios.put(\"/api/presentations/\".concat(presentationId, \"/sections/\").concat(id), {\n                  title: title,\n                  description: description,\n                  dataSet: dataSet,\n                  selections: selections,\n                  involvedRecords: involvedRecords,\n                  filters: filters,\n                  joiners: joiners,\n                  groupers: groupers,\n                  sorters: sorters,\n                  extraData: extraData\n                }).then(function (response) {\n                  var section = response.data;\n                  commit('updateSectionDetail', {\n                    id: section.id,\n                    title: section.title,\n                    description: section.description,\n                    dataSet: section.dataSet,\n                    selections: section.selections,\n                    involvedRecords: section.involvedRecords,\n                    filters: section.filters,\n                    joiners: section.joiners,\n                    groupers: section.groupers,\n                    sorters: section.sorters,\n                    extraData: section.extraData\n                  });\n                }).catch(function (e) {\n                  commit('setSectionDetailApiError', {\n                    id: id,\n                    msg: e.toString(),\n                    msgDetail: JSON.stringify(e.response)\n                  });\n                }).finally(function () {\n                  commit('setSectionDetailLoading', {\n                    id: id,\n                    isLoading: false\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function saveSectionDetail(_x5, _x6) {\n        return _saveSectionDetail.apply(this, arguments);\n      }\n\n      return saveSectionDetail;\n    }(),\n    deleteSectionDetail: function () {\n      var _deleteSectionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(_ref11, _ref12) {\n        var commit, id, presentationId;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref11.commit;\n                id = _ref12.id, presentationId = _ref12.presentationId;\n                commit('setSectionDetailLoading', {\n                  id: id,\n                  isLoading: true\n                });\n                _context4.next = 5;\n                return axios.delete(\"/api/presentations/\".concat(presentationId, \"/sections/\").concat(id)).then(function () {\n                  commit('deleteSectionDetail', id);\n                }).catch(function (e) {\n                  commit('setSectionDetailApiError', {\n                    id: id,\n                    msg: e.toString(),\n                    msgDetail: JSON.stringify(e.response)\n                  });\n                  commit('setSectionDetailLoading', {\n                    id: id,\n                    isLoading: false\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteSectionDetail(_x7, _x8) {\n        return _deleteSectionDetail.apply(this, arguments);\n      }\n\n      return deleteSectionDetail;\n    }(),\n    sendPreviewAnalysisRequest: function () {\n      var _sendPreviewAnalysisRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(_ref13, _ref14) {\n        var commit, presentationId, id, dataSet, selections, involvedRecords, filters, joiners, groupers, sorters, versionId;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref13.commit;\n                presentationId = _ref14.presentationId, id = _ref14.id, dataSet = _ref14.dataSet, selections = _ref14.selections, involvedRecords = _ref14.involvedRecords, filters = _ref14.filters, joiners = _ref14.joiners, groupers = _ref14.groupers, sorters = _ref14.sorters, versionId = _ref14.versionId;\n                commit('setSectionDetailLoading', {\n                  id: id,\n                  isLoading: true\n                });\n                _context5.next = 5;\n                return axios.post(\"/api/presentations/\".concat(presentationId, \"/analysis\"), {\n                  dataSet: dataSet,\n                  selections: selections,\n                  involvedRecords: involvedRecords,\n                  filters: filters,\n                  joiners: joiners,\n                  groupers: groupers,\n                  sorters: sorters,\n                  versionId: versionId\n                }).then(function (response) {\n                  commit('updateSectionAnalysisPreviewResult', {\n                    id: id,\n                    result: response.data\n                  });\n                }).catch(function (e) {\n                  commit('setSectionDetailApiError', {\n                    id: id,\n                    msg: e.toString(),\n                    msgDetail: JSON.stringify(e.response)\n                  });\n                }).finally(function () {\n                  commit('setSectionDetailLoading', {\n                    id: id,\n                    isLoading: false\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function sendPreviewAnalysisRequest(_x9, _x10) {\n        return _sendPreviewAnalysisRequest.apply(this, arguments);\n      }\n\n      return sendPreviewAnalysisRequest;\n    }(),\n    sendAnalysisRequest: function () {\n      var _sendAnalysisRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(_ref15, _ref16) {\n        var state, commit, id, presentationId, version, sectionToAnalysis;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                state = _ref15.state, commit = _ref15.commit;\n                id = _ref16.id, presentationId = _ref16.presentationId, version = _ref16.version;\n                sectionToAnalysis = findSectionDetailById(state.sectionList, id);\n                commit('setSectionDetailLoading', {\n                  id: sectionToAnalysis.id,\n                  isLoading: true\n                });\n                _context6.next = 6;\n                return axios.post(\"/api/presentations/\".concat(presentationId, \"/analysis\"), {\n                  dataSet: sectionToAnalysis.dataSet,\n                  selections: sectionToAnalysis.selections,\n                  involvedRecords: sectionToAnalysis.involvedRecords,\n                  filters: sectionToAnalysis.filters,\n                  joiners: sectionToAnalysis.joiners,\n                  groupers: sectionToAnalysis.groupers,\n                  sorters: sectionToAnalysis.sorters,\n                  versionId: version\n                }).then(function (response) {\n                  commit('updateSectionAnalysisResult', {\n                    id: sectionToAnalysis.id,\n                    result: response.data\n                  });\n                }).catch(function (e) {\n                  commit('setSectionDetailApiError', {\n                    id: sectionToAnalysis.id,\n                    msg: e.toString(),\n                    msgDetail: JSON.stringify(e.response)\n                  });\n                }).finally(function () {\n                  commit('setSectionDetailLoading', {\n                    id: sectionToAnalysis.id,\n                    isLoading: false\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function sendAnalysisRequest(_x11, _x12) {\n        return _sendAnalysisRequest.apply(this, arguments);\n      }\n\n      return sendAnalysisRequest;\n    }()\n  }\n};\n\nfunction findSectionDetailById(sectionList, id) {\n  return sectionList.find(function (element) {\n    return element.id === id;\n  });\n}",{"version":3,"sources":["C:/Users/Liu Ruiping/Documents/course-profile-mcomp/proj/chairvise3-0-final/src/web/app/src/store/modules/section.js"],"names":["axios","PredefinedQueries","state","sectionList","sectionListStatus","isLoading","isApiError","apiErrorMsg","mutations","setSectionListLoading","setSectionListApiError","msg","clearSectionList","addSectionDetail","payload","push","Object","assign","result","previewResult","status","apiErrorMsgDetail","deleteSectionDetail","index","findIndex","s","id","splice","updateSectionDetail","title","description","dataSet","selections","involvedRecords","filters","joiners","groupers","sorters","extraData","section","findSectionDetailById","setSectionDetailLoading","setSectionDetailApiError","msgDetail","updateSectionAnalysisResult","updateSectionAnalysisPreviewResult","actions","fetchSectionList","presentationId","commit","get","then","response","data","forEach","catch","e","toString","finally","selectedNewSection","newSection","JSON","parse","stringify","replace","post","saveSectionDetail","put","delete","sendPreviewAnalysisRequest","versionId","sendAnalysisRequest","version","sectionToAnalysis","find","element"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport PredefinedQueries from \"@/store/data/predefinedQueries\"\n\nexport default {\n  state: {\n    sectionList: [],\n    sectionListStatus: {\n      isLoading: false,\n      isApiError: false,\n      apiErrorMsg: '',\n    }\n  },\n  mutations: {\n    setSectionListLoading(state, isLoading) {\n      if (isLoading) {\n        state.sectionListStatus.isApiError = false;\n      }\n      state.sectionListStatus.isLoading = isLoading;\n    },\n\n    setSectionListApiError(state, msg) {\n      state.sectionListStatus.isApiError = true;\n      state.sectionListStatus.apiErrorMsg = msg;\n    },\n\n    clearSectionList(state) {\n      state.sectionList = []\n    },\n\n    addSectionDetail(state, payload) {\n      state.sectionList.push(Object.assign({\n        result: [],\n        previewResult: [],\n        status: {\n          isLoading: false,\n          isApiError: false,\n          apiErrorMsg: '',\n          apiErrorMsgDetail: '',\n        }\n      }, payload))\n    },\n\n    deleteSectionDetail(state, payload) {\n      let index = state.sectionList.findIndex(s => s.id === payload);\n      state.sectionList.splice(index, 1)\n    },\n\n    updateSectionDetail(state, {id, title, description, dataSet, selections, involvedRecords, filters, joiners, groupers, sorters, extraData}) {\n      let section = findSectionDetailById(state.sectionList, id);\n\n      section.title = title;\n      section.description = description;\n      section.dataSet = dataSet;\n      section.selections = selections;\n      section.involvedRecords = involvedRecords;\n      section.filters = filters;\n      section.joiners = joiners;\n      section.groupers = groupers;\n      section.sorters = sorters;\n      section.extraData = extraData;\n    },\n\n    setSectionDetailLoading(state, {id, isLoading}) {\n      let section = findSectionDetailById(state.sectionList, id);\n      if (isLoading) {\n        section.status.isApiError = false;\n      }\n      section.status.isLoading = isLoading;\n    },\n\n    setSectionDetailApiError(state, {id, msg, msgDetail}) {\n      let section = findSectionDetailById(state.sectionList, id);\n      section.status.isApiError = true;\n      section.status.apiErrorMsg = msg;\n      section.status.apiErrorMsgDetail = msgDetail;\n    },\n\n    updateSectionAnalysisResult(state, {id, result}) {\n      let section = findSectionDetailById(state.sectionList, id);\n      section.result = result;\n    },\n\n    updateSectionAnalysisPreviewResult(state, {id, result}) {\n      let section = findSectionDetailById(state.sectionList, id);\n      section.previewResult = result;\n    }\n  },\n  actions: {\n    async fetchSectionList({commit}, presentationId) {\n      commit('setSectionListLoading', true);\n      await axios.get(`/api/presentations/${presentationId}/sections`)\n        .then(response => {\n          commit('clearSectionList');\n          response.data.forEach(s => {\n            commit('addSectionDetail', s)\n          });\n        })\n        .catch(e => {\n          commit('setSectionListApiError', e.toString())\n        })\n        .finally(() => {\n          commit('setSectionListLoading', false);\n        })\n    },\n\n    async addSectionDetail({commit}, {presentationId, selectedNewSection, dataSet}) {\n      commit('setSectionListLoading', true);\n\n      let newSection = PredefinedQueries[selectedNewSection].data;\n      newSection = JSON.parse(JSON.stringify(newSection).replace(/\\${PLACEHOLDER_DATA_SET}/g, dataSet));\n\n      await axios.post(`/api/presentations/${presentationId}/sections`, newSection)\n        .then(response => {\n          commit('addSectionDetail', response.data)\n        })\n        .catch(e => {\n          commit('setSectionListApiError', e.toString())\n        })\n        .finally(() => {\n          commit('setSectionListLoading', false);\n        })\n    },\n\n    async saveSectionDetail({commit}, {id, presentationId, title, description, dataSet, selections, involvedRecords, filters, joiners, groupers, sorters, extraData}) {\n      commit('setSectionDetailLoading', {id, isLoading: true});\n\n      await axios.put(`/api/presentations/${presentationId}/sections/${id}`, {\n        title,\n        description,\n        dataSet,\n        selections,\n        involvedRecords,\n        filters,\n        joiners,\n        groupers,\n        sorters,\n        extraData\n      })\n        .then(response => {\n          let section = response.data;\n          commit('updateSectionDetail', {\n            id: section.id,\n            title: section.title,\n            description: section.description,\n            dataSet: section.dataSet,\n            selections: section.selections,\n            involvedRecords: section.involvedRecords,\n            filters: section.filters,\n            joiners: section.joiners,\n            groupers: section.groupers,\n            sorters: section.sorters,\n            extraData: section.extraData\n          })\n        })\n        .catch(e => {\n          commit('setSectionDetailApiError', {id, msg: e.toString(), msgDetail: JSON.stringify(e.response)});\n        })\n        .finally(() => {\n          commit('setSectionDetailLoading', {id, isLoading: false});\n        })\n    },\n\n    async deleteSectionDetail({commit}, {id, presentationId}) {\n      commit('setSectionDetailLoading', {id, isLoading: true});\n\n      await axios.delete(`/api/presentations/${presentationId}/sections/${id}`)\n        .then(() => {\n          commit('deleteSectionDetail', id)\n        })\n        .catch(e => {\n          commit('setSectionDetailApiError', {id, msg: e.toString(), msgDetail: JSON.stringify(e.response)});\n          commit('setSectionDetailLoading', {id, isLoading: false});\n        })\n    },\n\n    async sendPreviewAnalysisRequest({commit}, {presentationId, id, dataSet, selections, involvedRecords, filters, joiners, groupers, sorters, versionId}) {\n      commit('setSectionDetailLoading', {id, isLoading: true});\n\n      await axios.post(`/api/presentations/${presentationId}/analysis`, {\n        dataSet,\n        selections,\n        involvedRecords,\n        filters,\n        joiners,\n        groupers,\n        sorters,\n        versionId\n      })\n        .then(response => {\n          commit('updateSectionAnalysisPreviewResult', {id, result: response.data});\n        })\n        .catch(e => {\n          commit('setSectionDetailApiError', {id, msg: e.toString(), msgDetail: JSON.stringify(e.response)});\n        })\n        .finally(() => {\n          commit('setSectionDetailLoading', {id, isLoading: false});\n        })\n    },\n\n    async sendAnalysisRequest({state, commit}, {id, presentationId, version}) {\n      let sectionToAnalysis = findSectionDetailById(state.sectionList, id);\n      commit('setSectionDetailLoading', {id: sectionToAnalysis.id, isLoading: true});\n\n      await axios.post(`/api/presentations/${presentationId}/analysis`, {\n        dataSet: sectionToAnalysis.dataSet,\n        selections: sectionToAnalysis.selections,\n        involvedRecords: sectionToAnalysis.involvedRecords,\n        filters: sectionToAnalysis.filters,\n        joiners: sectionToAnalysis.joiners,\n        groupers: sectionToAnalysis.groupers,\n        sorters: sectionToAnalysis.sorters,\n        versionId: version\n      })\n        .then(response => {\n          commit('updateSectionAnalysisResult', {id: sectionToAnalysis.id, result: response.data});\n        })\n        .catch(e => {\n          commit('setSectionDetailApiError',\n            {id: sectionToAnalysis.id, msg: e.toString(), msgDetail: JSON.stringify(e.response)});\n        })\n        .finally(() => {\n          commit('setSectionDetailLoading', {id: sectionToAnalysis.id, isLoading: false});\n        })\n    }\n  }\n}\n\nfunction findSectionDetailById(sectionList, id) {\n  return sectionList.find(element => element.id === id);\n}"]}]}