{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\DependencyChartSectionDetail.vue?vue&type=template&id=cc3fe9e8&scoped=true&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\DependencyChartSectionDetail.vue","mtime":1592326180000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"basic-section-detail\",\n    {\n      attrs: {\n        \"section-detail\": _vm.sectionDetail,\n        \"presentation-id\": _vm.presentationId,\n        \"has-data\": _vm.hasData,\n        version: _vm.version,\n        \"edit-form-selections-rule\": _vm.editFormSelectionsRule,\n        \"edit-form-involved-records-rule\": _vm.editFormInvolvedRecordsRule,\n        \"edit-form-filters-rule\": _vm.editFormFiltersRule,\n        \"edit-form-groupers-rule\": _vm.editFormGroupersRule,\n        \"edit-form-sorters-rule\": _vm.editFormSortersRule,\n        extraFormItemsRules: _vm.extraFormItemsRules\n      },\n      on: { \"update-visualisation\": _vm.updateVisualisation },\n      scopedSlots: _vm._u([\n        {\n          key: \"extraFormItems\",\n          fn: function(slotProps) {\n            return [\n              slotProps.isInAdvancedMode\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: \"xAxis Field Name\",\n                        prop: \"extraData.xAxisFieldName\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"xAxisFieldName\" },\n                          model: {\n                            value: slotProps.extraData.xAxisFieldName,\n                            callback: function($$v) {\n                              _vm.$set(\n                                slotProps.extraData,\n                                \"xAxisFieldName\",\n                                $$v\n                              )\n                            },\n                            expression: \"slotProps.extraData.xAxisFieldName\"\n                          }\n                        },\n                        _vm._l(slotProps.editForm.selections, function(\n                          selection\n                        ) {\n                          return _c(\"el-option\", {\n                            key: selection.rename,\n                            attrs: {\n                              label: selection.rename,\n                              value: selection.rename\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              slotProps.isInAdvancedMode\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: \"xAxis Field Name 2\",\n                        prop: \"extraData.xAxisFieldName2\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"xAxisFieldName2\" },\n                          model: {\n                            value: slotProps.extraData.xAxisFieldName2,\n                            callback: function($$v) {\n                              _vm.$set(\n                                slotProps.extraData,\n                                \"xAxisFieldName2\",\n                                $$v\n                              )\n                            },\n                            expression: \"slotProps.extraData.xAxisFieldName2\"\n                          }\n                        },\n                        _vm._l(slotProps.editForm.selections, function(\n                          selection\n                        ) {\n                          return _c(\"el-option\", {\n                            key: selection.rename,\n                            attrs: {\n                              label: selection.rename,\n                              value: selection.rename\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              slotProps.isInAdvancedMode\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: \"yAxis Field Name\",\n                        prop: \"extraData.yAxisFieldName\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"yAxisFieldName\" },\n                          model: {\n                            value: slotProps.extraData.yAxisFieldName,\n                            callback: function($$v) {\n                              _vm.$set(\n                                slotProps.extraData,\n                                \"yAxisFieldName\",\n                                $$v\n                              )\n                            },\n                            expression: \"slotProps.extraData.yAxisFieldName\"\n                          }\n                        },\n                        _vm._l(slotProps.editForm.selections, function(\n                          selection\n                        ) {\n                          return _c(\"el-option\", {\n                            key: selection.rename,\n                            attrs: {\n                              label: selection.rename,\n                              value: selection.rename\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              slotProps.isInAdvancedMode\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: \"Legend Label Name\",\n                        prop: \"extraData.dataSetLabel\"\n                      }\n                    },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"Label Name\" },\n                        model: {\n                          value: slotProps.extraData.dataSetLabel,\n                          callback: function($$v) {\n                            _vm.$set(slotProps.extraData, \"dataSetLabel\", $$v)\n                          },\n                          expression: \"slotProps.extraData.dataSetLabel\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              slotProps.isInAdvancedMode\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: \"Colorful Bar\",\n                        prop: \"extraData.isColorfulBar\"\n                      }\n                    },\n                    [\n                      _c(\"el-switch\", {\n                        attrs: {\n                          \"active-text\": \"Colorful Bar\",\n                          \"inactive-text\": \"Single Color Bar\"\n                        },\n                        model: {\n                          value: slotProps.extraData.isColorfulBar,\n                          callback: function($$v) {\n                            _vm.$set(slotProps.extraData, \"isColorfulBar\", $$v)\n                          },\n                          expression: \"slotProps.extraData.isColorfulBar\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              slotProps.isInAdvancedMode\n                ? _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: \"Num of result to display\",\n                        prop: \"extraData.numOfResultToDisplay\"\n                      }\n                    },\n                    [\n                      _c(\"el-slider\", {\n                        attrs: { min: 5, max: 30 },\n                        model: {\n                          value: slotProps.extraData.numOfResultToDisplay,\n                          callback: function($$v) {\n                            _vm.$set(\n                              slotProps.extraData,\n                              \"numOfResultToDisplay\",\n                              $$v\n                            )\n                          },\n                          expression: \"slotProps.extraData.numOfResultToDisplay\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._l(slotProps.extraData.fieldsShownInToolTips, function(\n                tooltip,\n                index\n              ) {\n                return slotProps.isInAdvancedMode\n                  ? _c(\n                      \"el-form-item\",\n                      {\n                        key: \"tooltips\" + index,\n                        attrs: { label: \"Tooltips \" + index }\n                      },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"Field\" },\n                            model: {\n                              value: tooltip.field,\n                              callback: function($$v) {\n                                _vm.$set(tooltip, \"field\", $$v)\n                              },\n                              expression: \"tooltip.field\"\n                            }\n                          },\n                          _vm._l(slotProps.editForm.selections, function(\n                            selection\n                          ) {\n                            return _c(\"el-option\", {\n                              key: selection.rename,\n                              attrs: {\n                                label: selection.rename,\n                                value: selection.rename\n                              }\n                            })\n                          }),\n                          1\n                        ),\n                        _vm._v(\" \\n      \"),\n                        _c(\"el-input\", {\n                          staticStyle: { width: \"150px\" },\n                          attrs: { placeholder: \"Label Name\" },\n                          model: {\n                            value: tooltip.label,\n                            callback: function($$v) {\n                              _vm.$set(tooltip, \"label\", $$v)\n                            },\n                            expression: \"tooltip.label\"\n                          }\n                        }),\n                        _vm._v(\" \\n      \"),\n                        _c(\"el-button\", {\n                          attrs: {\n                            type: \"danger\",\n                            icon: \"el-icon-delete\",\n                            circle: \"\"\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.removeTooltip(\n                                slotProps.extraData.fieldsShownInToolTips,\n                                tooltip\n                              )\n                            }\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              }),\n              slotProps.isInAdvancedMode\n                ? _c(\n                    \"el-form-item\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"success\", plain: \"\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.addTooltip(\n                                slotProps.extraData.fieldsShownInToolTips\n                              )\n                            }\n                          }\n                        },\n                        [_vm._v(\"Add Tooltip\\n      \")]\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ]\n          }\n        }\n      ])\n    },\n    [_c(\"dependency-chart\", { attrs: { \"chart-data\": _vm.chartData } })],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}