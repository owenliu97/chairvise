{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\chart\\DependencyChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\chart\\DependencyChart.vue","mtime":1592326138000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport { Chart } from \"highcharts-vue\";\r\nimport Highcharts from \"highcharts\";\r\nimport dependencyInit from \"highcharts/modules/dependency-wheel\";\r\nimport sanKeyInit from \"highcharts/modules/sankey\";\r\nimport exporting from \"highcharts/modules/exporting\";\r\nexporting(Highcharts);\r\nsanKeyInit(Highcharts);\r\ndependencyInit(Highcharts);\r\n\r\nexport default {\r\n  name: \"DependencyChart\",\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // default chart settings\r\n      chartOptions: {\r\n        exporting: {\r\n          enabled: false\r\n        },\r\n        title: {\r\n          text: \"\"\r\n        },\r\n        series: [\r\n          {\r\n            keys: [\"from\", \"to\", \"weight\"],\r\n            data: [],\r\n\r\n            type: \"dependencywheel\",\r\n\r\n            name: \"Dependency wheel series\",\r\n            dataLabels: {\r\n              color: \"#333\",\r\n              textPath: {\r\n                enabled: true,\r\n                attributes: {\r\n                  dy: 5\r\n                }\r\n              },\r\n              distance: 10\r\n            },\r\n            size: \"95%\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    highcharts: Chart\r\n  },\r\n  watch: {\r\n    chartData() {\r\n      this.renderDependencyChart(this.chartData);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.renderDependencyChart(this.chartData);\r\n  },\r\n  methods: {\r\n    // pass the extract data from query and pass it into the chart\r\n    renderDependencyChart(chartData) {\r\n      let chart = this.$refs.highcharts.chart;\r\n      var xField1 = [];\r\n      var xField2 = [];\r\n      var submissionCount = [];\r\n\r\n      // get the submission for each row i from query data\r\n      chartData.datasets[0].data.map(data => {\r\n        submissionCount.push(data);\r\n      });\r\n      // get the xField1 name for row i from query data\r\n      chartData.labels.map(data => {\r\n        xField1.push(data);\r\n      });\r\n      // get the xField2 name for row i from query data\r\n      chartData.labels2.map(data => {\r\n        xField2.push(data);\r\n      });\r\n\r\n      // put each row i extracted from query data into the chart\r\n      var seriesData = [];\r\n      for (var i = 0; i < xField1.length; i++) {\r\n        seriesData.push([xField1[i], xField2[i], submissionCount[i]]);\r\n      }\r\n      // set the chart data\r\n      chart.series[0].setData(seriesData, true);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["DependencyChart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DependencyChart.vue","sourceRoot":"src/components/sectionDetail/chart","sourcesContent":["<template>\r\n  <highcharts :options=\"chartOptions\" ref=\"highcharts\"></highcharts>\r\n</template>\r\n\r\n<script>\r\nimport { Chart } from \"highcharts-vue\";\r\nimport Highcharts from \"highcharts\";\r\nimport dependencyInit from \"highcharts/modules/dependency-wheel\";\r\nimport sanKeyInit from \"highcharts/modules/sankey\";\r\nimport exporting from \"highcharts/modules/exporting\";\r\nexporting(Highcharts);\r\nsanKeyInit(Highcharts);\r\ndependencyInit(Highcharts);\r\n\r\nexport default {\r\n  name: \"DependencyChart\",\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // default chart settings\r\n      chartOptions: {\r\n        exporting: {\r\n          enabled: false\r\n        },\r\n        title: {\r\n          text: \"\"\r\n        },\r\n        series: [\r\n          {\r\n            keys: [\"from\", \"to\", \"weight\"],\r\n            data: [],\r\n\r\n            type: \"dependencywheel\",\r\n\r\n            name: \"Dependency wheel series\",\r\n            dataLabels: {\r\n              color: \"#333\",\r\n              textPath: {\r\n                enabled: true,\r\n                attributes: {\r\n                  dy: 5\r\n                }\r\n              },\r\n              distance: 10\r\n            },\r\n            size: \"95%\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    highcharts: Chart\r\n  },\r\n  watch: {\r\n    chartData() {\r\n      this.renderDependencyChart(this.chartData);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.renderDependencyChart(this.chartData);\r\n  },\r\n  methods: {\r\n    // pass the extract data from query and pass it into the chart\r\n    renderDependencyChart(chartData) {\r\n      let chart = this.$refs.highcharts.chart;\r\n      var xField1 = [];\r\n      var xField2 = [];\r\n      var submissionCount = [];\r\n\r\n      // get the submission for each row i from query data\r\n      chartData.datasets[0].data.map(data => {\r\n        submissionCount.push(data);\r\n      });\r\n      // get the xField1 name for row i from query data\r\n      chartData.labels.map(data => {\r\n        xField1.push(data);\r\n      });\r\n      // get the xField2 name for row i from query data\r\n      chartData.labels2.map(data => {\r\n        xField2.push(data);\r\n      });\r\n\r\n      // put each row i extracted from query data into the chart\r\n      var seriesData = [];\r\n      for (var i = 0; i < xField1.length; i++) {\r\n        seriesData.push([xField1[i], xField2[i], submissionCount[i]]);\r\n      }\r\n      // set the chart data\r\n      chart.series[0].setData(seriesData, true);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]}]}