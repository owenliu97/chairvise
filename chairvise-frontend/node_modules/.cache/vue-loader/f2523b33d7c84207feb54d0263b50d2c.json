{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\views\\ViewConferences.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\views\\ViewConferences.vue","mtime":1591977194000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {ZoomCenterTransition} from 'vue2-transitions'\nimport { FullCalendar } from 'vue-full-calendar'    \nimport ConferenceBrief from \"@/components/ConferenceBrief.vue\";\n\nexport default {\n    name: 'ViewConferences',\n    props: {\n        id: String,\n    },\n    data() {\n        return {\n            show: false,\n            config: {\n                height: 500,\n                editable: false,\n            },\n        }\n    },\n    watch: {\n        'isError'() {\n            if (!this.isError) {\n                return\n            }\n            this.$notify.error({\n                title: 'Conference list API request fail',\n                message: this.$store.state.conference.conferenceListStatus.apiErrorMsg,\n                duration: 0\n            });\n        }\n    },\n    computed: {\n        isLogin() {\n            return this.$store.state.userInfo.isLogin\n        },\n        isAppLoading() {\n            return this.$store.state.isPageLoading\n        },\n        isLoading() {\n            return this.$store.state.conference.conferenceListStatus.isLoading\n        },\n        conferences() {\n            let list = this.$store.state.conference.conferenceList;\n            var tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n            let newList = [];\n            list.forEach((element) => {\n                var temp = new Date(element.date);\n                var date = (new Date(temp - tzoffset)).toISOString().slice(0, -1);\n                newList.push({\n                    id: element.id,\n                    title: element.name,\n                    start: date,\n                    allDay: false\n                })\n            });\n            return newList; \n        },\n        isError() {\n            return this.$store.state.conference.conferenceListStatus.isApiError\n        },\n    },\n    components: {\n        ZoomCenterTransition,\n        FullCalendar,\n        ConferenceBrief\n    },\n    methods: {\n        createConference() {\n            this.$router.push(\"/conference/add\");\n        },\n        loadConferences() {\n            this.show = true;\n        },\n        viewConference(id) {\n            this.$router.push(\"/conference/\" + id);\n        },\n        eventSelected(event) {\n            this.viewConference(event.id);\n        }\n    },\n    mounted() {\n        this.$store.dispatch('getConferenceList')\n        this.loadConferences();\n    }\n}\n",{"version":3,"sources":["ViewConferences.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewConferences.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <el-main>\n        <h1 class=\"alignLeft\">My Conferences </h1>\n        <el-button class=\"alignRight\" type=\"primary\" icon=\"el-icon-plus\" @click=\"createConference\">Add New Conference</el-button>\n        <br/>\n        <el-divider></el-divider>\n        <zoom-center-transition :duration=\"500\" :delay=\"100\">\n            <el-card v-show=\"show\">\n                <FullCalendar :events=\"conferences\" ref=\"fullCalendar\" \n                        defaultView='month' :config=\"config\"\n                        @event-selected=\"eventSelected\"/>\n            </el-card>\n        </zoom-center-transition>\n    </el-main>\n</template>\n\n<script>\n    import {ZoomCenterTransition} from 'vue2-transitions'\n    import { FullCalendar } from 'vue-full-calendar'    \n    import ConferenceBrief from \"@/components/ConferenceBrief.vue\";\n\n    export default {\n        name: 'ViewConferences',\n        props: {\n            id: String,\n        },\n        data() {\n            return {\n                show: false,\n                config: {\n                    height: 500,\n                    editable: false,\n                },\n            }\n        },\n        watch: {\n            'isError'() {\n                if (!this.isError) {\n                    return\n                }\n                this.$notify.error({\n                    title: 'Conference list API request fail',\n                    message: this.$store.state.conference.conferenceListStatus.apiErrorMsg,\n                    duration: 0\n                });\n            }\n        },\n        computed: {\n            isLogin() {\n                return this.$store.state.userInfo.isLogin\n            },\n            isAppLoading() {\n                return this.$store.state.isPageLoading\n            },\n            isLoading() {\n                return this.$store.state.conference.conferenceListStatus.isLoading\n            },\n            conferences() {\n                let list = this.$store.state.conference.conferenceList;\n                var tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n                let newList = [];\n                list.forEach((element) => {\n                    var temp = new Date(element.date);\n                    var date = (new Date(temp - tzoffset)).toISOString().slice(0, -1);\n                    newList.push({\n                        id: element.id,\n                        title: element.name,\n                        start: date,\n                        allDay: false\n                    })\n                });\n                return newList; \n            },\n            isError() {\n                return this.$store.state.conference.conferenceListStatus.isApiError\n            },\n        },\n        components: {\n            ZoomCenterTransition,\n            FullCalendar,\n            ConferenceBrief\n        },\n        methods: {\n            createConference() {\n                this.$router.push(\"/conference/add\");\n            },\n            loadConferences() {\n                this.show = true;\n            },\n            viewConference(id) {\n                this.$router.push(\"/conference/\" + id);\n            },\n            eventSelected(event) {\n                this.viewConference(event.id);\n            }\n        },\n        mounted() {\n            this.$store.dispatch('getConferenceList')\n            this.loadConferences();\n        }\n    }\n</script>\n\n<style scoped>\n    .alignLeft {\n        float: left;\n        display: inline-block;\n        margin: 0;\n    }\n    .alignRight {\n        float: right;\n        display: inline-block;\n        margin: 0;\n    }\n    .background {\n        background-color: transparent;\n        border-style: hidden;\n    }\n    .conferenceCard {\n        width: 100%;\n        height: 100%;\n        margin-bottom: 16px;\n        background-color: white;\n        text-align:left;\n        color: black;\n        padding: 4px 16px;\n    }\n\n    .el-card__body {\n    }\n    .menuCard {\n        width: 100%;\n        height: 100%;\n    }\n    .infinite-list {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n    .conferenceCard .button {\n        color: black;\n        text-align: left;\n    }\n    .presentation-image {\n        text-align: center;\n        vertical-align: middle;\n        margin-top: 1rem;\n    }\n    .presentation-id {\n        margin-top: 1.7rem;\n    }\n    .right {\n        float:right;\n    }\n</style>"]}]}