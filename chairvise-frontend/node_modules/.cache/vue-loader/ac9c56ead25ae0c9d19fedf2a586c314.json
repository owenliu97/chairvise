{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\StatsSectionDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\StatsSectionDetail.vue","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {max, mean, median, min, standardDeviation, sum} from 'simple-statistics'\nimport BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue'\n\nexport default {\n  name: \"StatsSectionDetail\",\n\n  props: {\n    sectionDetail: {\n      type: Object,\n      required: true\n    },\n    presentationId: {\n      type: String,\n      required: true\n    },\n    version: {\n      type: String,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      tableData: []\n    }\n  },\n\n  computed: {\n    hasData() {\n      return this.tableData.length !== 0;\n    }\n  },\n\n  methods: {\n    updateVisualisation({result, selections, extraData}) {\n      this.tableData = [];\n      if (result.length === 0) {\n        return\n      }\n      let data = result.map(r => r[selections[1].rename]);\n\n      extraData.types.forEach(t => {\n        var rIds = [];\n        var rId;\n        var stringBuilder;\n        switch (t) {\n          case 'min':\n            stringBuilder = \"\";\n            rIds = result.filter(r => r[selections[1].rename] == min(data)).map(\n              r => r[selections[0].rename]);\n\n            for (rId of rIds) {\n              stringBuilder = stringBuilder + rId + \", \";\n            }\n            stringBuilder = stringBuilder.substring(0, stringBuilder.length-2);\n            \n            this.tableData.push({\n              type: 'Min',\n              value: min(data),\n              numIds: rIds.length,\n              reviewer: stringBuilder,\n            });\n            break;\n          case 'max':\n            stringBuilder = \"\";\n            rIds = result.filter(r => r[selections[1].rename] == max(data)).map(\n              r => r[selections[0].rename]);\n            for (rId of rIds) {\n              stringBuilder = stringBuilder + rId + \", \";\n            }\n            stringBuilder = stringBuilder.substring(0, stringBuilder.length-2);\n            this.tableData.push({\n              type: 'Max',\n              value: max(data),\n              numIds: rIds.length,\n              reviewer: stringBuilder,\n            });\n            break;\n          case 'sum':\n            this.tableData.push({\n              type: 'Sum',\n              value: sum(data),\n              numIds: result.length,\n              reviewer: \"-\",\n            });\n            break;\n          case 'avg':\n            this.tableData.push({\n              type: 'Mean',\n              value: mean(data).toFixed(2),\n              numIds: result.length,\n              reviewer: \"-\",\n            });\n            break;\n          case 'median':\n            this.tableData.push({\n              type: 'Median',\n              value: median(data),\n              numIds: result.length,\n              reviewer: \"-\",\n            });\n            break;\n          case 'std':\n            this.tableData.push({\n              type: 'ST.DEV',\n              value: standardDeviation(data).toFixed(2),\n              numIds: result.length,\n              reviewer: \"-\", \n            });\n            break; \n        }\n      })\n    }\n  },\n\n  components: {\n    BasicSectionDetail,\n  }\n}\n",{"version":3,"sources":["StatsSectionDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"StatsSectionDetail.vue","sourceRoot":"src/components/sectionDetail","sourcesContent":["<template>\n  <basic-section-detail :section-detail=\"sectionDetail\" :presentation-id=\"presentationId\" :has-data=\"hasData\"\n                        :version=\"version\"\n                        :extraFormItemsRules=\"{}\"\n                        @update-visualisation=\"updateVisualisation\">\n    <el-table\n      :data=\"tableData\"\n      stripe\n      style=\"width: 100%\">\n\n      <el-table-column\n        prop=\"type\"\n        label=\"Type\" width=\"200\">\n      </el-table-column>\n\n      <el-table-column\n        prop=\"value\"\n        label=\"Value\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-popover trigger=\"hover\" placement=\"top-start\">\n            <p> No. of Reviewers: {{ scope.row.numIds }}</p>\n            <div slot=\"reference\" class=\"name-wrapper\">\n              <el-button class=\"hovered-text\" type=\"text\"> {{ scope.row.value }} </el-button> \n            </div>\n          </el-popover>\n        </template>\n      </el-table-column>\n\n     <el-table-column\n        prop=\"reviewer\"\n        label=\"Corresponding Reviewer ID\">\n        <template slot-scope=\"scope\">\n        {{ scope.row.reviewer }}\n        </template>\n      </el-table-column>\n\n    </el-table>\n    <template slot=\"extraFormItems\" slot-scope=\"slotProps\">\n      <el-form-item label=\"Type\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-select placeholder=\"type\" v-model=\"slotProps.extraData.types\" multiple>\n          <el-option label=\"Min\" value=\"min\" reviewer=\"min\"></el-option>\n          <el-option label=\"Max\" value=\"max\" reviewer=\"max\"></el-option>\n          <el-option label=\"Sum\" value=\"sum\" reviewer=\"sum\"></el-option>\n          <el-option label=\"Average\" value=\"avg\" reviewer=\"avg\"></el-option>\n          <el-option label=\"Median\" value=\"median\" reviewer=\"median\"></el-option>\n          <el-option label=\"Standard Deviation\" value=\"std\" reviewer=\"std\"></el-option>\n        </el-select>\n      </el-form-item>\n    </template>\n  </basic-section-detail>\n</template>\n\n<script>\n  import {max, mean, median, min, standardDeviation, sum} from 'simple-statistics'\n  import BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue'\n\n  export default {\n    name: \"StatsSectionDetail\",\n\n    props: {\n      sectionDetail: {\n        type: Object,\n        required: true\n      },\n      presentationId: {\n        type: String,\n        required: true\n      },\n      version: {\n        type: String,\n        required: true\n      }\n    },\n\n    data() {\n      return {\n        tableData: []\n      }\n    },\n\n    computed: {\n      hasData() {\n        return this.tableData.length !== 0;\n      }\n    },\n\n    methods: {\n      updateVisualisation({result, selections, extraData}) {\n        this.tableData = [];\n        if (result.length === 0) {\n          return\n        }\n        let data = result.map(r => r[selections[1].rename]);\n\n        extraData.types.forEach(t => {\n          var rIds = [];\n          var rId;\n          var stringBuilder;\n          switch (t) {\n            case 'min':\n              stringBuilder = \"\";\n              rIds = result.filter(r => r[selections[1].rename] == min(data)).map(\n                r => r[selections[0].rename]);\n\n              for (rId of rIds) {\n                stringBuilder = stringBuilder + rId + \", \";\n              }\n              stringBuilder = stringBuilder.substring(0, stringBuilder.length-2);\n              \n              this.tableData.push({\n                type: 'Min',\n                value: min(data),\n                numIds: rIds.length,\n                reviewer: stringBuilder,\n              });\n              break;\n            case 'max':\n              stringBuilder = \"\";\n              rIds = result.filter(r => r[selections[1].rename] == max(data)).map(\n                r => r[selections[0].rename]);\n              for (rId of rIds) {\n                stringBuilder = stringBuilder + rId + \", \";\n              }\n              stringBuilder = stringBuilder.substring(0, stringBuilder.length-2);\n              this.tableData.push({\n                type: 'Max',\n                value: max(data),\n                numIds: rIds.length,\n                reviewer: stringBuilder,\n              });\n              break;\n            case 'sum':\n              this.tableData.push({\n                type: 'Sum',\n                value: sum(data),\n                numIds: result.length,\n                reviewer: \"-\",\n              });\n              break;\n            case 'avg':\n              this.tableData.push({\n                type: 'Mean',\n                value: mean(data).toFixed(2),\n                numIds: result.length,\n                reviewer: \"-\",\n              });\n              break;\n            case 'median':\n              this.tableData.push({\n                type: 'Median',\n                value: median(data),\n                numIds: result.length,\n                reviewer: \"-\",\n              });\n              break;\n            case 'std':\n              this.tableData.push({\n                type: 'ST.DEV',\n                value: standardDeviation(data).toFixed(2),\n                numIds: result.length,\n                reviewer: \"-\", \n              });\n              break; \n          }\n        })\n      }\n    },\n\n    components: {\n      BasicSectionDetail,\n    }\n  }\n</script>\n\n<style scoped>\n.hovered-text {\n  color: #606266\n}\n</style>"]}]}