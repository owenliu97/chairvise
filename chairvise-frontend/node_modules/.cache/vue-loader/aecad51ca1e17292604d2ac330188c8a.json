{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\LineChartSectionDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\sectionDetail\\LineChartSectionDetail.vue","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LineChart from '@/components/sectionDetail/chart/LineChart.vue'\nimport BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue'\nimport {generateBorderColor, generateBackgroundColor} from '@/common/color'\n\nexport default {\n  name: \"LineChartSectionDetail\",\n\n  props: {\n    sectionDetail: {\n      type: Object,\n      required: true\n    },\n    presentationId: {\n      type: String,\n      required: true\n    },\n    version: {\n      type: String,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      labels: [],\n      dataset: {},\n      options: {},\n    }\n  },\n\n  computed: {\n    hasData() {\n      return this.labels.length !== 0;\n    },\n\n    chartData() {\n      return {\n        labels: this.labels,\n        datasets: [this.dataset]\n      }\n    }\n  },\n\n  methods: {\n    updateVisualisation({result, extraData}) {\n      // process x axis\n      this.labels = result.map(record => record[extraData.xAxisFieldName]);\n\n      // process y axis\n      this.dataset = {\n        borderWidth: 1,\n        label: extraData.dataSetLabel,\n        data: result.map(record => record[extraData.yAxisFieldName]),\n        backgroundColor: generateBackgroundColor(2)[1],\n        borderColor: generateBorderColor(2)[1],\n      };\n\n      this.options = {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false,\n            },\n            gridLines: {\n              display: true\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              autoSkip: false\n            },\n            gridLines: {\n              display: false\n            },\n          }]\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        },\n        layout: {\n          padding: {\n            top: 30,\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          datalabels: {\n            anchor: 'end',\n            align: 'end'\n          }\n        }\n      }\n    }\n  },\n\n  components: {\n    BasicSectionDetail,\n    LineChart\n  }\n}\n",{"version":3,"sources":["LineChartSectionDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"LineChartSectionDetail.vue","sourceRoot":"src/components/sectionDetail","sourcesContent":["<template>\n  <basic-section-detail :section-detail=\"sectionDetail\" :presentation-id=\"presentationId\" :has-data=\"hasData\"\n                        :version=\"version\"\n                        :extraFormItemsRules=\"{}\"\n                        @update-visualisation=\"updateVisualisation\">\n    <line-chart :chart-data=\"chartData\" :options=\"options\"></line-chart>\n\n    <template slot=\"extraFormItems\" slot-scope=\"slotProps\">\n      <el-form-item label=\"xAxis Field Name\" prop=\"extraData.xAxisFieldName\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-select placeholder=\"xAxisFieldName\" v-model=\"slotProps.extraData.xAxisFieldName\">\n          <el-option\n            v-for=\"selection in slotProps.editForm.selections\"\n            :key=\"selection.rename\"\n            :label=\"selection.rename\"\n            :value=\"selection.rename\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"yAxis Field Name\" prop=\"extraData.yAxisFieldName\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-select placeholder=\"yAxisFieldName\" v-model=\"slotProps.extraData.yAxisFieldName\">\n          <el-option\n            v-for=\"selection in slotProps.editForm.selections\"\n            :key=\"selection.rename\"\n            :label=\"selection.rename\"\n            :value=\"selection.rename\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Legend Label Name\" prop=\"extraData.dataSetLabel\" v-if=\"slotProps.isInAdvancedMode\">\n        <el-input v-model=\"slotProps.extraData.dataSetLabel\" placeholder=\"Label Name\"></el-input>\n      </el-form-item>\n    </template>\n  </basic-section-detail>\n</template>\n\n<script>\n  import LineChart from '@/components/sectionDetail/chart/LineChart.vue'\n  import BasicSectionDetail from '@/components/sectionDetail/BasicSectionDetail.vue'\n  import {generateBorderColor, generateBackgroundColor} from '@/common/color'\n\n  export default {\n    name: \"LineChartSectionDetail\",\n\n    props: {\n      sectionDetail: {\n        type: Object,\n        required: true\n      },\n      presentationId: {\n        type: String,\n        required: true\n      },\n      version: {\n        type: String,\n        required: true\n      }\n    },\n\n    data() {\n      return {\n        labels: [],\n        dataset: {},\n        options: {},\n      }\n    },\n\n    computed: {\n      hasData() {\n        return this.labels.length !== 0;\n      },\n\n      chartData() {\n        return {\n          labels: this.labels,\n          datasets: [this.dataset]\n        }\n      }\n    },\n\n    methods: {\n      updateVisualisation({result, extraData}) {\n        // process x axis\n        this.labels = result.map(record => record[extraData.xAxisFieldName]);\n\n        // process y axis\n        this.dataset = {\n          borderWidth: 1,\n          label: extraData.dataSetLabel,\n          data: result.map(record => record[extraData.yAxisFieldName]),\n          backgroundColor: generateBackgroundColor(2)[1],\n          borderColor: generateBorderColor(2)[1],\n        };\n\n        this.options = {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: false,\n              },\n              gridLines: {\n                display: true\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              },\n              gridLines: {\n                display: false\n              },\n            }]\n          },\n          legend: {\n            display: true,\n            position: 'bottom'\n          },\n          layout: {\n            padding: {\n              top: 30,\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            datalabels: {\n              anchor: 'end',\n              align: 'end'\n            }\n          }\n        }\n      }\n    },\n\n    components: {\n      BasicSectionDetail,\n      LineChart\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}