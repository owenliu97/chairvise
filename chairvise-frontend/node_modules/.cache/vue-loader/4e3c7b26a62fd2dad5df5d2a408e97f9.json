{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\ConferenceBrief.vue?vue&type=style&index=0&id=eb8c8084&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\ConferenceBrief.vue","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.formStyle {\n  display: inline-block;\n  text-align: left;\n  margin-right: 8px;\n}ß\n .errorMsg {\n   margin-bottom: 18px;\n }\n.el-form-item__label {\n  font-weight: bold;\n}\n.el-card {\n  margin-bottom: 10px;\n}\n.details-card {\n  overflow-x: auto;\n}\n.download-section {\n  text-align:center;\n  vertical-align:middle;\n}\n.options-section {\n  text-align:center;\n  vertical-align:middle;\n  margin-top: 2rem;\n}\n.v-divide {\n  float: left;\n  height: 6rem;\n}\n",{"version":3,"sources":["ConferenceBrief.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConferenceBrief.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <el-card class=\"details-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span> Conference Details </span>\n      </div>\n      <el-row>\n        <el-col :span=\"18\">\n          <el-form class=\"formStyle\" label-position=\"left\" ref=\"conferenceForm\" label-width=\"150px\" :rules=\"rules\"\n                   :model=\"conferenceForm\" v-loading=\"isLoading\" >\n            <el-alert v-if=\"isError\" :title=\"apiErrorMsg\" type=\"error\" show-icon class=\"errorMsg\"/>\n\n            <el-form-item label=\"Name: \" :prop=\" isInEditMode ? 'name' : ''\" >\n              <div v-if=\"!isInEditMode\">{{ conferenceForm.name }}</div>\n              <el-input v-model=\"conferenceFormName\" v-if=\"isInEditMode\"/>\n            </el-form-item>\n            <el-form-item label=\"Description: \">\n              <div v-if=\"!isInEditMode\" id=\"conference-description\">{{ conferenceForm.description }}</div>\n              <el-input type=\"textarea\" autosize v-model=\"conferenceFormDescription\" v-if=\"isInEditMode\"/>\n            </el-form-item>\n            <el-form-item label=\"Date: \">\n              <el-col>\n                <div v-if=\"!isInEditMode\" id=\"conference-date\">{{ conferenceForm.date.slice(0, 10) + \"  \" + conferenceForm.date.slice(11, 19) }}</div>\n                <el-input v-model=\"conferenceFormDate\" v-if=\"isInEditMode\"/>\n              </el-col>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n      <el-divider></el-divider>\n      <div class=\"options-section\">\n        <el-button-group>\n          <el-button type=\"danger\" v-if=\"!isNewConference && isLogin\"\n                    @click=\"deleteConference()\">\n            <i class=\"el-icon-delete\"> Delete </i>\n          </el-button>\n        </el-button-group>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\n  import {ID_NEW_CONFERENCE} from \"@/common/const\";\n\n  export default {\n    name: 'ConferenceBrief',\n    props: {\n      id: String\n    },\n    mounted() {\n      this.updateConferenceForm();\n    },\n    watch: {\n      'id'() {\n        this.updateConferenceForm()\n      },\n    },\n    computed: {\n      isLogin() {\n        return this.$store.state.userInfo.isLogin\n      },\n      conferenceForm() {\n\n        var tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n        var date = (new Date(new Date(this.conferenceFormDate) - tzoffset)).toISOString().slice(0, -1);\n        return {\n          name: this.conferenceFormName,\n          creatorIdentifier: this.conferenceFormCreatorIdentifier,\n          description: this.conferenceFormDescription,\n          date: date,\n        }\n      },\n      conferenceFormName: {\n        get() {\n          return this.$store.state.conference.conferenceForm.name\n        },\n        set(value) {\n          this.$store.commit('setConferenceFormField', {\n            field: 'name',\n            value\n          })\n        },\n      },\n      conferenceFormCreatorIdentifier() {\n        return this.$store.state.conference.conferenceForm.creatorIdentifier\n      },\n      conferenceFormDescription: {\n        get() {\n          return this.$store.state.conference.conferenceForm.description\n        },\n        set(value) {\n          this.$store.commit('setConferenceFormField', {\n            field: 'description',\n            value\n          })\n        },\n      },\n      conferenceFormDate: {\n        get() {\n          return this.$store.state.conference.conferenceForm.date\n        },\n        set(value) {\n          this.$store.commit('setConferenceFormField', {\n            field: 'date',\n            value\n          })\n        },\n      },\n      isNewConference() {\n        return this.id === ID_NEW_CONFERENCE\n      },\n      isInEditMode() {\n        return this.isEditing || this.isNewConference\n      },\n      isLoading() {\n        return this.$store.state.conference.conferenceFormStatus.isLoading\n      },\n      isError() {\n        return this.$store.state.conference.conferenceFormStatus.isApiError\n      },\n      apiErrorMsg() {\n        return this.$store.state.conference.conferenceFormStatus.apiErrorMsg\n      }\n    },\n    data() {\n      return {\n        isEditing: false,\n        rules: {\n          name: [\n            {required: true, message: 'Please enter conference name', trigger: 'blur'},\n            {min: 3, message: 'The length should be more than 3 character', trigger: 'blur'}\n          ]\n        }\n      }\n    },\n    methods: {\n      changeEditMode(isEditing) {\n        if (isEditing === false) {\n          this.updateConferenceForm();\n        }\n        this.isEditing = isEditing;\n      },\n\n      addConference() {\n        this.$refs['conferenceForm'].validate((valid) => {\n          if (!valid) {\n            return\n          }\n          this.$refs['conferenceForm'].clearValidate();\n          if (this.isNewConference) {\n            // add\n            this.$store.dispatch('saveConference')\n                    .then(() => {\n                      if (this.isError) {\n                        return\n                      }\n                      // redirect to the newly added conference\n                      this.$router.push({\n                        name: 'conference',\n                        params: {\n                          id: this.$store.state.conference.conferenceForm.id\n                        }\n                      });\n                    });\n          } else {\n            // edit\n            this.$store.dispatch('updateConference')\n                    .then(() => {\n                      if (this.isError) {\n                        return\n                      }\n                      this.isEditing = false\n                    })\n          }\n        });\n      },\n      deleteConference() {\n        this.$store.dispatch('deleteConference', this.id)\n                .then(() => {\n                  if (this.isError) {\n                    return\n                  }\n                  this.$router.replace({\n                    name: 'conference',\n                    params: {\n                      id: ID_NEW_CONFERENCE\n                    }\n                  });\n                  this.isEditing = false;\n                })\n      },\n      updateConferenceForm() {\n        if (this.$refs['conferenceForm']) {\n          this.$refs['conferenceForm'].clearValidate();\n        }\n        this.$store.commit('resetConferenceForm');\n        if (this.id !== ID_NEW_CONFERENCE) {\n          this.$store.dispatch('getConference', this.id)\n        }\n      },\n    },\n\n    components: {\n    },\n  }\n</script>\n\n<style scoped>\n  .formStyle {\n    display: inline-block;\n    text-align: left;\n    margin-right: 8px;\n  }ß\n   .errorMsg {\n     margin-bottom: 18px;\n   }\n  .el-form-item__label {\n    font-weight: bold;\n  }\n  .el-card {\n    margin-bottom: 10px;\n  }\n  .details-card {\n    overflow-x: auto;\n  }\n  .download-section {\n    text-align:center;\n    vertical-align:middle;\n  }\n  .options-section {\n    text-align:center;\n    vertical-align:middle;\n    margin-top: 2rem;\n  }\n  .v-divide {\n    float: left;\n    height: 6rem;\n  }\n</style>\n"]}]}