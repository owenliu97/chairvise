{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\MappingTool.vue?vue&type=template&id=0a422af4&scoped=true&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\components\\MappingTool.vue","mtime":1573697856000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-row\",\n    { staticClass: \"map-container\", attrs: { gutter: 20 } },\n    [\n      _c(\n        \"el-col\",\n        { staticClass: \"map-result\", attrs: { span: 12 } },\n        [\n          _c(\n            \"el-card\",\n            [\n              _c(\"h3\", [_vm._v(\"Mapping\")]),\n              _c(\n                \"transition-group\",\n                { attrs: { name: \"map-group\", tag: \"div\" } },\n                _vm._l(_vm.mappedPairs, function(item, index) {\n                  return _c(\n                    \"div\",\n                    { key: index, staticClass: \"pair-tag\" },\n                    [\n                      _c(\"el-tag\", { attrs: { size: \"medium\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.dbList.fieldMetaDataList[item[0]].type)\n                        )\n                      ]),\n                      _c(\"p\", { staticClass: \"pair-info\" }, [\n                        _vm._v(\n                          \"\\n              \" +\n                            _vm._s(_vm.dbList.fieldMetaDataList[item[0]].name) +\n                            \"\\n              \"\n                        ),\n                        _c(\"i\", { staticClass: \"el-icon-caret-right\" }),\n                        _vm._v(\n                          \"\\n              \" +\n                            _vm._s(_vm.importList[item[1]]) +\n                            \"\\n            \"\n                        )\n                      ]),\n                      _c(\"i\", {\n                        staticClass: \"el-icon-close\",\n                        on: {\n                          click: function($event) {\n                            return _vm.removeMapClicked(index)\n                          }\n                        }\n                      }),\n                      _c(\"br\")\n                    ],\n                    1\n                  )\n                }),\n                0\n              ),\n              _c(\"transition\", { attrs: { name: \"fade\", mode: \"out-in\" } }, [\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.mappedPairs.length === 0,\n                        expression: \"mappedPairs.length === 0\"\n                      }\n                    ],\n                    staticClass: \"no-map-info\"\n                  },\n                  [_c(\"p\", [_vm._v(\"No mapping specified!\")])]\n                )\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-col\",\n        { staticClass: \"map-area\", attrs: { span: 10, offset: 1 } },\n        [\n          _c(\n            \"el-card\",\n            [\n              _c(\n                \"div\",\n                { staticClass: \"db-tags\" },\n                [\n                  _c(\"h3\", [_vm._v(\"Database fields\")]),\n                  _c(\n                    \"transition-group\",\n                    { attrs: { name: \"tags-group\", tag: \"div\" } },\n                    _vm._l(_vm.dbList.fieldMetaDataList, function(item, idx) {\n                      return _c(\n                        \"div\",\n                        {\n                          key: idx,\n                          staticClass: \"tag\",\n                          class: [\n                            idx === _vm.selectedDBTag ? \"active\" : \"\",\n                            _vm.mappedDBTag.includes(idx) ? \"hidden\" : \"\"\n                          ],\n                          on: {\n                            click: function($event) {\n                              return _vm.dbTagClicked(idx)\n                            }\n                          }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(item.name) +\n                              \"\\n          \"\n                          )\n                        ]\n                      )\n                    }),\n                    0\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"import-tags\" },\n                [\n                  _c(\"h3\", [_vm._v(\"Imported data fields\")]),\n                  _c(\n                    \"transition-group\",\n                    { attrs: { name: \"tags-group\", tag: \"div\" } },\n                    _vm._l(_vm.importList, function(item, idx) {\n                      return _c(\n                        \"div\",\n                        {\n                          key: idx,\n                          staticClass: \"tag\",\n                          class: [\n                            idx === _vm.selectedImportTag ? \"active\" : \"\",\n                            _vm.mappedImportTag.includes(idx) ? \"hidden\" : \"\"\n                          ],\n                          on: {\n                            click: function($event) {\n                              return _vm.importTagClicked(idx)\n                            }\n                          }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            \" + _vm._s(item) + \"\\n          \"\n                          )\n                        ]\n                      )\n                    }),\n                    0\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { staticClass: \"button-row\" },\n                [\n                  _c(\n                    \"el-col\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          staticClass: \"back-button\",\n                          attrs: { icon: \"el-icon-upload\", type: \"success\" },\n                          on: { click: _vm.uploadClicked }\n                        },\n                        [_vm._v(\"Upload\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          staticClass: \"back-button\",\n                          attrs: { icon: \"el-icon-back\", type: \"info\" },\n                          on: { click: _vm.backClicked }\n                        },\n                        [_vm._v(\"Back\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"Confirm\",\n            visible: _vm.hasSubmitted,\n            width: \"30%\",\n            center: \"\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.hasSubmitted = $event\n            }\n          }\n        },\n        [\n          _c(\"span\", [\n            _vm._v(\n              \"After submission, your will not be able to modify your mapping. Are you sure that the columns are correctly mapped?\"\n            )\n          ]),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.hasSubmitted = false\n                    }\n                  }\n                },\n                [_vm._v(\"Cancel\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.submitMapping }\n                },\n                [_vm._v(\"Confirm\")]\n              )\n            ],\n            1\n          )\n        ]\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"Success\",\n            visible: _vm.uploadSuccess,\n            width: \"30%\",\n            center: \"\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.uploadSuccess = $event\n            }\n          }\n        },\n        [\n          _c(\"span\", [\n            _vm._v(\n              \"You have successfully imported data using the column mapping!\"\n            )\n          ]),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.closeSuccess } },\n                [_vm._v(\"Sure\")]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}