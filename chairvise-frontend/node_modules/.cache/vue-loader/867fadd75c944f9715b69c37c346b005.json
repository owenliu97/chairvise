{"remainingRequest":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\views\\Analyze.vue?vue&type=style&index=0&id=7049a3fc&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\src\\views\\Analyze.vue","mtime":1592827302000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liu Ruiping\\Documents\\course-profile-mcomp\\proj\\chairvise3-0-final\\src\\web\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.alignLeft {\n  float: left;\n  display: inline-block;\n  margin: 0;\n}\n.alignRight {\n  float: right;\n  display: inline-block;\n  margin: 0;\n}\n.background {\n  background-color: transparent;\n  border-style: hidden;\n}\n.presentationCard {\n  width: 100%;\n  height: 100%;\n  margin-bottom: 16px;\n  background-color: white;\n  text-align:left;\n  color: black;\n  padding: 4px 16px;\n}\n\n.el-card__body {\n}\n.menuCard {\n  width: 100%;\n  height: 100%;\n}\n.infinite-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n.presentationCard .button {\n  color: black;\n  text-align: left;\n} \n.presentation-image {\n  text-align: center;\n  vertical-align: middle;\n  margin-top: 1rem;\n}\n.presentation-id {\n  margin-top: 1.7rem;\n}\n",{"version":3,"sources":["Analyze.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Analyze.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <el-main>\n    <h1 class=\"alignLeft\">My Created Presentations </h1>\n    <el-button class=\"alignRight\" type=\"primary\" icon=\"el-icon-plus\"\n           v-if=\"!isPresentationListEmpty\" @click=\"createPresentation\">Add New Presentation</el-button>\n    <br/>\n    <el-divider></el-divider>\n    <div class=\"infinite-list-wrapper\">\n      <el-card v-if=\"isPresentationListEmpty\" >\n        <EmptyPresentation />\n      </el-card>\n      <ul class=\"infinite-list\" v-infinite-scroll=\"loadMorePresentation\" infinite-scroll-disabled=\"disabled\" v-loading=\"isLoading\">\n        <li v-for=\"(presentation, index) in presentations\" :key=\"presentation.id\">\n          <zoom-center-transition :duration=\"500\" :delay=\"100 * (index - 1)\">\n            <el-card shadow=\"hover\">\n              <el-button type=\"text\" class=\"presentationCard\" v-show=\"show\" @click=\"viewPresentation(presentation.id)\">\n                <el-row>\n                  <el-col class=\"presentation-id\" :span=\"1\">\n                    <p> #{{presentation.id}} </p>\n                  </el-col>\n                  <el-col :span=\"19\" :offset=\"1\">\n                    <p> {{ presentation.name }} </p>\n                  </el-col>\n                  <el-col :span=\"19\" :offset=\"1\">\n                    <p>{{ presentation.description }}</p>\n                  </el-col>\n                </el-row>\n              </el-button>\n            </el-card>\n          </zoom-center-transition>\n        </li>\n      </ul>\n    </div>\n  </el-main>\n</template>\n\n<script>\n  import {ZoomCenterTransition} from 'vue2-transitions'\n  import EmptyPresentation from '@/components/emptyStates/EmptyPresentation.vue'\n\n  export default {\n    name: 'Analyze',\n    props: {\n      id: String,\n    },\n    data() {\n      return {\n        show: false,\n        count: 0\n      }\n    },\n    watch: {\n      'isError'() {\n        if (!this.isError) {\n          return\n        }\n        this.$notify.error({\n          title: 'Presentation list API request fail',\n          message: this.$store.state.presentation.presentationListStatus.apiErrorMsg,\n          duration: 0\n        });\n      }\n    },\n    computed: {\n      isLogin() {\n        return this.$store.state.userInfo.isLogin\n      },\n      isAppLoading() {\n        return this.$store.state.isPageLoading\n      },\n      isLoading() {\n        return this.$store.state.presentation.presentationListStatus.isLoading\n      },\n      presentations() {\n        return this.$store.state.presentation.presentationList;\n      },\n      isPresentationListEmpty() {\n        return this.$store.state.presentation.presentationList.length <= 0;\n      },\n      isError() {\n        return this.$store.state.presentation.presentationListStatus.isApiError\n      },\n    },\n    components: {\n      ZoomCenterTransition,\n      EmptyPresentation\n    },\n    methods: {\n      createPresentation() {\n        this.$router.push(\"/analyze/create\");\n      },\n      loadPresentations() {\n        this.show = true;\n      },\n      loadMorePresentation () {\n        this.count += 5\n      },\n      viewPresentation(id) {\n        this.$router.push(\"/analyze/\" + id);\n      }\n    },\n    mounted() {\n      this.$store.dispatch('getPresentationList')\n      this.loadPresentations();\n    }\n  }\n</script>\n\n<style scoped>\n  .alignLeft {\n    float: left;\n    display: inline-block;\n    margin: 0;\n  }\n  .alignRight {\n    float: right;\n    display: inline-block;\n    margin: 0;\n  }\n  .background {\n    background-color: transparent;\n    border-style: hidden;\n  }\n  .presentationCard {\n    width: 100%;\n    height: 100%;\n    margin-bottom: 16px;\n    background-color: white;\n    text-align:left;\n    color: black;\n    padding: 4px 16px;\n  }\n\n  .el-card__body {\n  }\n  .menuCard {\n    width: 100%;\n    height: 100%;\n  }\n  .infinite-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  .presentationCard .button {\n    color: black;\n    text-align: left;\n  } \n  .presentation-image {\n    text-align: center;\n    vertical-align: middle;\n    margin-top: 1rem;\n  }\n  .presentation-id {\n    margin-top: 1.7rem;\n  }\n</style>"]}]}